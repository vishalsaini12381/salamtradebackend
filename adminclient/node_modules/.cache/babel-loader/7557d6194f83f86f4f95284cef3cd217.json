{"ast":null,"code":"var _jsxFileName = \"/home/shivendra/Desktop/techoffice/salamadmin/adminclient/src/DataTable.js\";\nimport moment from 'moment'; // Example for onSort prop\n\nimport React, { Component } from 'react'; // Import React\n\nimport axios from 'axios';\nimport { Link, withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport action from '../src/action/action';\nimport { connect } from 'react-redux';\nimport { render } from 'react-dom'; // Import render method\n\nimport Datatable from 'react-bs-datatable'; // Import this package\n// import { connect } from 'react-redux';\n\nimport swal from 'sweetalert';\n\nclass DataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vendorList: [],\n      type: 'Vendor'\n    };\n    this.vendorFetch = this.vendorFetch.bind(this);\n  }\n\n  vendorFetch() {\n    let obj = {};\n    obj.type = this.state.type;\n    axios.post('http://localhost:3300/api/vendorList', obj).then(response => {\n      console.log('BBBBBBBBBBBBBBBBBB', response.data.data[0]);\n      this.setState({\n        vendorList: response.data.data\n      });\n    });\n  }\n\n  vendor(e, i) {}\n\n  componentWillMount() {\n    this.vendorFetch();\n  }\n\n  vendor(e, i) {\n    console.log('WWWWWWWWWWWWWWWWWWWWWWWWWWWW', e.state.vendorList[i]._id);\n    axios.post('http://localhost:3300/api/fetchVendorList', {\n      vendorId: e.state.vendorList[i]._id\n    }).then(response => {\n      console.log('$$$$$$$$$$$$$$$$$$$$', response);\n\n      if (response) {\n        console.log('this.props.authenticate', this.props.authenticate);\n        this.props.authenticate({\n          type: 'authenticate',\n          payload: response.data\n        });\n      }\n    });\n    this.props.history.replace('/Vendordetail');\n  }\n\n  render(e, i) {\n    const header = [{\n      title: 'Vendor Name',\n      prop: 'vendorname',\n      sortable: true,\n      filterable: true\n    }, {\n      title: 'Store Name',\n      prop: 'storename',\n      sortable: true,\n      filterable: true\n    }, // { title: 'Name Uppercased', prop: 'realnameuppercase', cell: (row) => row.realname.toUpperCase() },\n    {\n      title: 'Email Id',\n      prop: 'email',\n      sortable: true,\n      filterable: true\n    }, {\n      title: 'Mobile No',\n      prop: 'mobile',\n      sortable: true,\n      filterable: true\n    }, {\n      title: 'Action',\n      prop: 'action',\n      sortable: true,\n      filterable: true\n    }];\n    let state = this.state;\n    const body = [];\n    state.vendorList.map((e, i) => {\n      body.push({\n        'vendorname': e.name,\n        'storename': e.storeName,\n        'email': e.email,\n        'mobile': e.mobile,\n        'action': React.createElement(\"div\", {\n          className: \"actiontrans\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"#\",\n          onClick: e => this.vendor(this, i),\n          value: e._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \" \", React.createElement(\"i\", {\n          className: \"fa fa-eye \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        })), \" \\xA0\", React.createElement(Link, {\n          to: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \" \", React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        })), \" \")\n      });\n    });\n    const onSortFunction = {\n      date(columnValue) {\n        // Convert the string date format to UTC timestamp\n        // So the table could sort it by number instead of by string\n        return moment(columnValue, 'Do MMMM YYYY').valueOf();\n      }\n\n    };\n    const customLabels = {\n      first: '<<',\n      last: '>>',\n      prev: '<',\n      next: '>',\n      show: 'Display',\n      entries: 'rows',\n      noResults: 'There is no data to be displayed'\n    }; // In your render method\n\n    return React.createElement(Datatable, {\n      tableHeader: header,\n      tableBody: body,\n      keyName: \"userTable\",\n      tableClass: \"striped hover responsive\",\n      rowsPerPage: 5,\n      rowsPerPageOption: [5, 10, 15, 20],\n      initialSort: {\n        prop: \"username\",\n        isAscending: true\n      },\n      onSort: onSortFunction,\n      labels: customLabels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticateState: state.inititateState.authenticateState // email: state.inititateState.email,\n    // userId: state.inititateState.userId,\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    authenticate: bindActionCreators(action.authenticate, dispatch)\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DataTable));","map":{"version":3,"sources":["/home/shivendra/Desktop/techoffice/salamadmin/adminclient/src/DataTable.js"],"names":["moment","React","Component","axios","Link","withRouter","bindActionCreators","action","connect","render","Datatable","swal","DataTable","constructor","props","state","vendorList","type","vendorFetch","bind","obj","post","then","response","console","log","data","setState","vendor","e","i","componentWillMount","_id","vendorId","authenticate","payload","history","replace","header","title","prop","sortable","filterable","body","map","push","name","storeName","email","mobile","onSortFunction","date","columnValue","valueOf","customLabels","first","last","prev","next","show","entries","noResults","isAscending","mapStateToProps","authenticateState","inititateState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import moment from 'moment'; // Example for onSort prop\nimport React, { Component } from 'react'; // Import React\nimport axios from 'axios';\nimport {Link, withRouter} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport action from '../src/action/action';\nimport {connect} from 'react-redux';\nimport { render } from 'react-dom'; // Import render method\nimport Datatable from 'react-bs-datatable'; // Import this package\n// import { connect } from 'react-redux';\nimport swal from 'sweetalert';\n \nclass DataTable extends Component{ \n    constructor(props){\n        super(props);\n        this.state = {\n          vendorList : [],\n          type \t : 'Vendor',\n        }\n        this.vendorFetch = this.vendorFetch.bind(this);\n      }\n    \n        vendorFetch(){\n          let obj = {};\n                obj.type = this.state.type;\n          axios.post('http://localhost:3300/api/vendorList',obj).then((response)=>{\n            console.log('BBBBBBBBBBBBBBBBBB',response.data.data[0]);\n            this.setState({\n              vendorList: response.data.data\n            })\n          })\n        }\n    \n        vendor(e,i){\n        }\n\n        componentWillMount(){\n          this.vendorFetch();\n        }\n\n        vendor(e,i){\n        console.log('WWWWWWWWWWWWWWWWWWWWWWWWWWWW',e.state.vendorList[i]._id);\n          axios.post('http://localhost:3300/api/fetchVendorList',{\n            vendorId : e.state.vendorList[i]._id\n          }).then((response)=>{\n            console.log('$$$$$$$$$$$$$$$$$$$$',response);\n            if(response){\n              console.log('this.props.authenticate',this.props.authenticate);\n              this.props.authenticate({\n                type: 'authenticate',\n                payload: response.data\n              })\n            }\n          })\n          this.props.history.replace('/Vendordetail');\n        }\n\nrender(e,i){\nconst header = [\n  { title: 'Vendor Name', prop: 'vendorname', sortable: true, filterable: true },\n  { title: 'Store Name', prop: 'storename', sortable: true ,filterable: true},\n  // { title: 'Name Uppercased', prop: 'realnameuppercase', cell: (row) => row.realname.toUpperCase() },\n  { title: 'Email Id', prop: 'email',      sortable: true,filterable: true },\n  { title: 'Mobile No', prop: 'mobile',sortable: true,filterable: true },\n  { title: 'Action', prop: 'action'    ,sortable: true , filterable: true },\n  ];\n \nlet state = this.state;\nconst body = [];\n  state.vendorList.map((e,i)=>{\n    body.push({'vendorname' : e.name,\n     'storename':e.storeName,\n     'email': e.email,\n      'mobile': e.mobile,\n      'action': <div className=\"actiontrans\" > \n       <Link to = \"#\" onClick = {(e)=>this.vendor(this,i)} value = {e._id} > <i className=\"fa fa-eye \"></i></Link> &nbsp;\n       {/* <Link to = \"#\"  > <i className=\"fa fa-edit\"></i></Link> &nbsp; */}\n       <Link to = \"#\"  > <i className=\"fa fa-trash\"></i></Link> </div>  });\n  })\n \nconst onSortFunction = {\n  date(columnValue) {\n    // Convert the string date format to UTC timestamp\n    // So the table could sort it by number instead of by string\n    return moment(columnValue, 'Do MMMM YYYY').valueOf();\n  },\n};\n \nconst customLabels = {\n  first: '<<',\n  last: '>>',\n  prev: '<',\n  next: '>',\n  show: 'Display',\n  entries: 'rows',\n  noResults: 'There is no data to be displayed',\n};\n \n// In your render method\nreturn(\n\n<Datatable\n  tableHeader={header}\n  tableBody={body}\n  keyName=\"userTable\"\n  tableClass=\"striped hover responsive\"\n  rowsPerPage={5}\n  rowsPerPageOption={[5, 10, 15, 20]}\n  initialSort={{prop: \"username\", isAscending: true}}\n  onSort={onSortFunction}\n  labels={customLabels}\n/>\n  )\n }\n}\n\nfunction mapStateToProps(state){\n  return {\n  \n    authenticateState : state.inititateState.authenticateState,\n    // email: state.inititateState.email,\n    // userId: state.inititateState.userId,\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n\treturn {\n    authenticate : bindActionCreators(action.authenticate, dispatch),\n\t}\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(DataTable));"]},"metadata":{},"sourceType":"module"}