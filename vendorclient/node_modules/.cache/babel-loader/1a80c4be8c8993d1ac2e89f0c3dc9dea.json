{"ast":null,"code":"var _jsxFileName = \"/home/shivendra/Desktop/techoffice/salamvendor/vendorclient/src/createprofile/map.js\";\nimport React, { Component } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport axios from 'axios';\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      latLng: ''\n    };\n  }\n\n  handleChange(address, latLng) {\n    this.setState({\n      address\n    });\n  }\n\n  handleSelect(address, latLng) {\n    geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng));\n    console.log('Success', latLng); // axios.post('http://localhost:3400/api/clientProfile'{address,latLng})\n  }\n\n  render() {\n    console.log('this.address', this.state.latLng);\n    return React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      value: this.state.latLng,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, getInputProps({\n      placeholder: 'Search Places ...',\n      className: 'location-search-input'\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, suggestion.description));\n    }))));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/shivendra/Desktop/techoffice/salamvendor/vendorclient/src/createprofile/map.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","axios","Map","constructor","props","state","address","latLng","handleChange","setState","handleSelect","then","results","console","log","render","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,IACIC,gBADJ,EAEIC,SAFJ,QAGS,2BAHT;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;AAEE,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,MAAM,EAAG;AAAxB,KAAb;AACD;;AAEDC,EAAAA,YAAY,CAACF,OAAD,EAAUC,MAAV,EAAkB;AAC5B,SAAKE,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd;AACD;;AAGDI,EAAAA,YAAY,CAAEJ,OAAF,EAAUC,MAAV,EAAkB;AAC5BR,IAAAA,gBAAgB,CAACO,OAAD,CAAhB,CACGK,IADH,CACQC,OAAO,IAAIZ,SAAS,CAACY,OAAO,CAAC,CAAD,CAAR,CAD5B,EAEGD,IAFH,CAEQJ,MAAM,IAAIM,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,MAAvB,CAFlB;AAGEM,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBP,MAAtB,EAJ0B,CAK1B;AACH;;AAEDQ,EAAAA,MAAM,GACL;AACIF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKT,KAAL,CAAWE,MAAtC;AACH,WACE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,OADpB;AAEE,MAAA,KAAK,EAAI,KAAKD,KAAL,CAAWE,MAFtB;AAGE,MAAA,QAAQ,EAAE,KAAKC,YAHjB;AAIE,MAAA,QAAQ,EAAE,KAAKE,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,CAAC;AAAEM,MAAAA,aAAF;AAAiBC,MAAAA,WAAjB;AAA8BC,MAAAA,sBAA9B;AAAsDC,MAAAA;AAAtD,KAAD,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,+CACMH,aAAa,CAAC;AAChBI,MAAAA,WAAW,EAAE,mBADG;AAEhBC,MAAAA,SAAS,EAAE;AAFK,KAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAOE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADd,EAEGF,WAAW,CAACK,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,YAAMF,SAAS,GAAGE,UAAU,CAACC,MAAX,GACd,yBADc,GAEd,iBAFJ,CAD6B,CAI7B;;AACA,YAAMC,KAAK,GAAGF,UAAU,CAACC,MAAX,GACV;AAAEE,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OADU,GAEV;AAAED,QAAAA,eAAe,EAAE,SAAnB;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OAFJ;AAGA,aACE,6CACMT,sBAAsB,CAACK,UAAD,EAAa;AACrCF,QAAAA,SADqC;AAErCI,QAAAA;AAFqC,OAAb,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,UAAU,CAACK,WAAlB,CANF,CADF;AAUD,KAlBA,CAFH,CAPF,CAPJ,CADF;AA4CD;;AAlEyB;;AAqE9B,eAAe1B,GAAf","sourcesContent":["import React , {Component} from 'react';\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng,\n  } from 'react-places-autocomplete';\nimport axios from 'axios';\n   \n  class Map extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { address: '' ,latLng : ''};\n    }\n   \n    handleChange(address, latLng) {\n      this.setState({ address });\n    };\n\n   \n    handleSelect (address,latLng) {\n      geocodeByAddress(address)\n        .then(results => getLatLng(results[0]))\n        .then(latLng => console.log('Success', latLng))\n        console.log('Success',latLng);\n        // axios.post('http://localhost:3400/api/clientProfile'{address,latLng})\n    };\n   \n    render()\n     {\n         console.log('this.address',this.state.latLng);\n      return (\n        <PlacesAutocomplete\n          value={this.state.address}\n          value = {this.state.latLng}\n          onChange={this.handleChange}\n          onSelect={this.handleSelect}\n        >\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n              <input\n                {...getInputProps({\n                  placeholder: 'Search Places ...',\n                  className: 'location-search-input',\n                })}\n              />\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions.map(suggestion => {\n                  const className = suggestion.active\n                    ? 'suggestion-item--active'\n                    : 'suggestion-item';\n                  // inline style for demonstration purpose\n                  const style = suggestion.active\n                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                  return (\n                    <div\n                      {...getSuggestionItemProps(suggestion, {\n                        className,\n                        style,\n                      })}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n     \n     \n     \n     );\n    }\n  }\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}