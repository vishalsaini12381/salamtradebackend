{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\n\nvar CheckboxGroup = function (props) {\n  var children = props.children,\n      name = props.name,\n      checkedValues = props.value,\n      onChange = props.onChange;\n\n  var onCheckboxChange = function (checkboxValue, event) {\n    if (event.target.checked) {\n      onChange(checkedValues.concat(checkboxValue));\n    } else {\n      onChange(checkedValues.filter(function (v) {\n        return v !== checkboxValue;\n      }));\n    }\n  };\n\n  var Checkbox = function (checkboxProps) {\n    var cbValue = checkboxProps.value,\n        disabled = checkboxProps.disabled,\n        rest = __rest(checkboxProps, [\"value\", \"disabled\"]);\n\n    var checked = checkedValues ? checkedValues.indexOf(cbValue) >= 0 : false;\n    return React.createElement(\"input\", __assign({}, rest, {\n      type: \"checkbox\",\n      name: name,\n      disabled: disabled,\n      checked: checked,\n      onChange: onCheckboxChange.bind(null, cbValue),\n      value: cbValue\n    }));\n  };\n\n  return children(Checkbox);\n};\n\nexport default CheckboxGroup;","map":null,"metadata":{},"sourceType":"module"}