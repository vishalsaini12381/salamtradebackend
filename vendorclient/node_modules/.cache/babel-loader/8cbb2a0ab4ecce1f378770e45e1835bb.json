{"ast":null,"code":"var _jsxFileName = \"/home/shivendra/Desktop/techoffice/salamvendor/vendorclient/src/map.js\";\nimport React from 'react'; // import PlacesAutocomplete, { geocodeByAddress, getLatLng } from '../../src';\n\nimport { classnames } from './helpers';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address,\n        latitude: null,\n        longitude: null,\n        errorMessage: ''\n      });\n    };\n\n    this.handleSelect = selected => {\n      this.setState({\n        isGeocoding: true,\n        address: selected\n      });\n      geocodeByAddress(selected).then(res => getLatLng(res[0])).then(({\n        lat,\n        lng\n      }) => {\n        this.setState({\n          latitude: lat,\n          longitude: lng,\n          isGeocoding: false\n        });\n      }).catch(error => {\n        this.setState({\n          isGeocoding: false\n        });\n        console.log('error', error); // eslint-disable-line no-console\n      });\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        address: '',\n        latitude: null,\n        longitude: null\n      });\n    };\n\n    this.handleError = (status, clearSuggestions) => {\n      console.log('Error from Google Maps API', status); // eslint-disable-line no-console\n\n      this.setState({\n        errorMessage: status\n      }, () => {\n        clearSuggestions();\n      });\n    };\n\n    this.state = {\n      address: '',\n      errorMessage: '',\n      latitude: null,\n      longitude: null,\n      isGeocoding: false\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          address = _this$state.address,\n          errorMessage = _this$state.errorMessage,\n          latitude = _this$state.latitude,\n          longitude = _this$state.longitude,\n          isGeocoding = _this$state.isGeocoding;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(PlacesAutocomplete, {\n      onChange: this.handleChange,\n      value: address,\n      onSelect: this.handleSelect,\n      onError: this.handleError,\n      shouldFetchSuggestions: address.length > 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"Demo__search-bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Demo__search-input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({}, getInputProps({\n        placeholder: 'Search Places...',\n        className: 'Demo__search-input'\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), this.state.address.length > 0 && React.createElement(\"button\", {\n        className: \"Demo__clear-button\",\n        onClick: this.handleCloseClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"x\")), suggestions.length > 0 && React.createElement(\"div\", {\n        className: \"Demo__autocomplete-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, suggestions.map(suggestion => {\n        //   const className = classnames('Demo__suggestion-item', {\n        //     'Demo__suggestion-item--active': suggestion.active,\n        //   });\n        return (\n          /* eslint-disable react/jsx-key */\n          React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n            className\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }), React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, suggestion.formattedSuggestion.mainText), ' ', React.createElement(\"small\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, suggestion.formattedSuggestion.secondaryText))\n        );\n        /* eslint-enable react/jsx-key */\n      }), React.createElement(\"div\", {\n        className: \"Demo__dropdown-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/images/powered_by_google_default.png\",\n        className: \"Demo__dropdown-footer-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })))));\n    }), errorMessage.length > 0 && React.createElement(\"div\", {\n      className: \"Demo__error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.errorMessage), (latitude && longitude || isGeocoding) && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"Demo__geocode-result-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Geocode result\"), isGeocoding ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-spinner fa-pulse fa-3x fa-fw Demo__spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Demo__geocode-result-item--lat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Latitude:\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, latitude)), React.createElement(\"div\", {\n      className: \"Demo__geocode-result-item--lng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Longitude:\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, longitude)))));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/shivendra/Desktop/techoffice/salamvendor/vendorclient/src/map.js"],"names":["React","classnames","PlacesAutocomplete","geocodeByAddress","getLatLng","SearchBar","Component","constructor","props","handleChange","address","setState","latitude","longitude","errorMessage","handleSelect","selected","isGeocoding","then","res","lat","lng","catch","error","console","log","handleCloseClick","handleError","status","clearSuggestions","state","render","length","getInputProps","suggestions","getSuggestionItemProps","placeholder","className","map","suggestion","formattedSuggestion","mainText","secondaryText"],"mappings":"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","sourcesContent":["import React from 'react';\n// import PlacesAutocomplete, { geocodeByAddress, getLatLng } from '../../src';\nimport { classnames } from './helpers';\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng,\n  } from 'react-places-autocomplete';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      errorMessage: '',\n      latitude: null,\n      longitude: null,\n      isGeocoding: false,\n    };\n  }\n\n  handleChange = address => {\n    this.setState({\n      address,\n      latitude: null,\n      longitude: null,\n      errorMessage: '',\n    });\n  };\n\n  handleSelect = selected => {\n    this.setState({ isGeocoding: true, address: selected });\n    geocodeByAddress(selected)\n      .then(res => getLatLng(res[0]))\n      .then(({ lat, lng }) => {\n        this.setState({\n          latitude: lat,\n          longitude: lng,\n          isGeocoding: false,\n        });\n      })\n      .catch(error => {\n        this.setState({ isGeocoding: false });\n        console.log('error', error); // eslint-disable-line no-console\n      });\n  };\n\n  handleCloseClick = () => {\n    this.setState({\n      address: '',\n      latitude: null,\n      longitude: null,\n    });\n  };\n\n  handleError = (status, clearSuggestions) => {\n    console.log('Error from Google Maps API', status); // eslint-disable-line no-console\n    this.setState({ errorMessage: status }, () => {\n      clearSuggestions();\n    });\n  };\n\n  render() {\n    const {\n      address,\n      errorMessage,\n      latitude,\n      longitude,\n      isGeocoding,\n    } = this.state;\n\n    return (\n      <div>\n        <PlacesAutocomplete\n          onChange={this.handleChange}\n          value={address}\n          onSelect={this.handleSelect}\n          onError={this.handleError}\n          shouldFetchSuggestions={address.length > 2}\n        >\n          {({ getInputProps, suggestions, getSuggestionItemProps }) => {\n            return (\n              <div className=\"Demo__search-bar-container\">\n                <div className=\"Demo__search-input-container\">\n                  <input\n                    {...getInputProps({\n                      placeholder: 'Search Places...',\n                      className: 'Demo__search-input',\n                    })}\n                  />\n                  {this.state.address.length > 0 && (\n                    <button\n                      className=\"Demo__clear-button\"\n                      onClick={this.handleCloseClick}\n                    >\n                      x\n                    </button>\n                  )}\n                </div>\n                {suggestions.length > 0 && (\n                  <div className=\"Demo__autocomplete-container\">\n                    {suggestions.map(suggestion => {\n                    //   const className = classnames('Demo__suggestion-item', {\n                    //     'Demo__suggestion-item--active': suggestion.active,\n                    //   });\n\n                      return (\n                        /* eslint-disable react/jsx-key */\n                        <div\n                          {...getSuggestionItemProps(suggestion, { className })}\n                        >\n                          <strong>\n                            {suggestion.formattedSuggestion.mainText}\n                          </strong>{' '}\n                          <small>\n                            {suggestion.formattedSuggestion.secondaryText}\n                          </small>\n                        </div>\n                      );\n                      /* eslint-enable react/jsx-key */\n                    })}\n                    <div className=\"Demo__dropdown-footer\">\n                      <div>\n                        <img\n                          src='/images/powered_by_google_default.png'\n                          className=\"Demo__dropdown-footer-image\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            );\n          }}\n        </PlacesAutocomplete>\n        {errorMessage.length > 0 && (\n          <div className=\"Demo__error-message\">{this.state.errorMessage}</div>\n        )}\n\n        {((latitude && longitude) || isGeocoding) && (\n          <div>\n            <h3 className=\"Demo__geocode-result-header\">Geocode result</h3>\n            {isGeocoding ? (\n              <div>\n                <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw Demo__spinner\" />\n              </div>\n            ) : (\n              <div>\n                <div className=\"Demo__geocode-result-item--lat\">\n                  <label>Latitude:</label>\n                  <span>{latitude}</span>\n                </div>\n                <div className=\"Demo__geocode-result-item--lng\">\n                  <label>Longitude:</label>\n                  <span>{longitude}</span>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}