{
  "_from": "react-multiselect-checkboxes",
  "_id": "react-multiselect-checkboxes@0.1.1",
  "_inBundle": false,
  "_integrity": "sha512-lDqWPd8HYYRlUYy2yzJLPx4K3PUKUYpmIaEkigkZGVbnUHX2Ze8bNpVLe1WT+ddvtj4dyLJcWis5IbbGJm0bsA==",
  "_location": "/react-multiselect-checkboxes",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-multiselect-checkboxes",
    "fetchSpec": "latest",
    "name": "react-multiselect-checkboxes",
    "raw": "react-multiselect-checkboxes",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-multiselect-checkboxes/-/react-multiselect-checkboxes-0.1.1.tgz",
  "_shasum": "d282f6407f2a59c7a0766055b08ac11f85225475",
  "_spec": "react-multiselect-checkboxes",
  "_where": "/home/shivendra/Desktop/techoffice/salamvendor/vendorclient",
  "author": {
    "email": "sibnerian@gmail.com",
    "name": "Ian Sibner"
  },
  "bundleDependencies": false,
  "dependencies": {
    "deepmerge": "^2.1.1",
    "emotion": "^9.1.2",
    "prop-types": "^15.6.2",
    "react-select": "^2.1.1"
  },
  "deprecated": false,
  "description": "Spiffy multiselect with checkboxes",
  "devDependencies": {
    "@babel/cli": "^7.0.0-beta.46",
    "@babel/core": "^7.0.0-beta.46",
    "@babel/plugin-proposal-class-properties": "^7.0.0-beta.46",
    "@babel/plugin-proposal-decorators": "^7.0.0-rc.1",
    "@babel/plugin-proposal-export-namespace-from": "^7.0.0-rc.1",
    "@babel/plugin-proposal-function-sent": "^7.0.0-rc.1",
    "@babel/plugin-proposal-numeric-separator": "^7.0.0-rc.1",
    "@babel/plugin-proposal-object-rest-spread": "^7.0.0-beta.46",
    "@babel/preset-env": "^7.0.0-beta.46",
    "@babel/preset-react": "^7.0.0-beta.46",
    "@babel/preset-stage-2": "^7.0.0-rc.1",
    "@storybook/addon-actions": "^4.0.0-alpha.18",
    "@storybook/addon-info": "^4.0.0-alpha.16",
    "@storybook/addon-links": "^4.0.0-alpha.16",
    "@storybook/addon-storysource": "^4.0.0-alpha.16",
    "@storybook/addons": "^4.0.0-alpha.16",
    "@storybook/react": "^4.0.0-alpha.16",
    "@types/storybook__react": "^3.0.9",
    "babel-eslint": "^8.0.1",
    "babel-loader": "^8.0.0-beta.4",
    "concurrently": "^3.6.1",
    "css-loader": "^0.28.11",
    "eslint": "^4.9.0",
    "eslint-config-airbnb": "^16.0.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-plugin-flowtype": "^2.47.1",
    "eslint-plugin-import": "^2.12.0",
    "eslint-plugin-jsx-a11y": "^6.0.2",
    "eslint-plugin-prettier": "^2.6.0",
    "eslint-plugin-react": "^7.8.2",
    "html-webpack-plugin": "^3.2.0",
    "prettier": "^1.14.2",
    "react": "^16.4.2",
    "react-dom": "^16.3.2",
    "style-loader": "^0.21.0",
    "webpack": "^4.6.0",
    "webpack-cli": "^2.0.15",
    "webpack-dev-server": "^3.1.10"
  },
  "homepage": "",
  "keywords": [
    "checkbox",
    "multiselect",
    "react",
    "select"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "react-multiselect-checkboxes",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.3.0 || ^16.2.0",
    "react-dom": "^15.3.0 || ^16.2.0"
  },
  "readme": "# React Multiselect Checkboxes\n\nA flexible, stylable, compact multi-select component. \n\nIt's based on [`react-select`](https://github.com/JedWatson/react-select) and has a similar API for data and styling.\n\n![An image of the component](https://user-images.githubusercontent.com/2994372/44043882-ed30c560-9ef1-11e8-9021-1e4d14f8530f.png)\n\n## Installation\n\n```bash\nnpm i -S react-multiselect-checkboxes\n```\n\n## Basic usage\n\n```jsx\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\n\n// ...\nconst options = [\n  { label: 'Thing 1', value: 1},\n  { label: 'Thing 2', value: 2},\n];\n<ReactMultiSelectCheckboxes options={options} />\n```\n\n## Props\n\nNearly all of the options from [react-select]() are supported, except where they don't make sense (for instance, `isMulti={false}` isn't supported, since this is always in multi-select mode). These props are passed directly to the underlying `Select` component. In addition, there are some options  which are specific to `react-multiselect-checkboxes`:\n\n| Prop | Type | Default | Description |\n| --- | --- | --- | --- |\n| `placeholderButtonLabel`| `PropTypes.string`  | `'Select...'` | Displayed on dropdown button if no value is selected. |\n| `getDropdownButtonLabel`  | `PropTypes.func`  | `({ placeholderButtonLabel, value }) => {/* if-else logic*/}` | Get the label for the dropdown, based on the placeholder and the current value. By default this is (a) the placeholder, if nothing is selected; (b) the selected value's label, if one option is selected; or (c) the number selected (e.g. \"3 selected\") if more than one option is selected |\n| `rightAligned` | `PropTypes.bool` | `false` | Whether to align the menu to the right side of the component. By default it's flush with the left. |\n\n## Styling\n\nLike props, styles supported by react-select are passed directly into the underlying `Select` component. Some of the defaults have been tweaked for the multiselect, but you can override them like normal (see https://react-select.com/styles). In addition, there are some styles which are specific to `react-multiselect-checkboxes`:\n\n| Style key  | Options | Description | Screenshot |\n| --- | --- | --- | --- |\n| `dropdownButton` | `{ value, isOpen, width }`| Used to style the dropdown button component. Pressing this component opens the menu. | |\n| `groupHeading` | `{ checked, indeterminate }`| This exists in react-select already -- it's used to style the group heading label. We add two new options based on the selected state of the group: `checked` is true if all options in the group are selected, `indeterminate` if only some are selected.| |\n\n## Component replacement\n\nAgain, we're taking this API straight from `react-select`, and you can replace any of the basic `Select` components as well. There are some new components which are specific to `react-multiselect-checkboxes` too:\n\n### `Dropdown` ([source](https://github.com/twineteam/react-multiselect-checkboxes/blob/master/src/lib/Dropdown.jsx))\n\n| Prop | Type  | Description |\n| --- | --- | --- |\n| `children`| `PropTypes.node` | The children _for the menu_. Note: this is _not_ the dropdown button / click target. |\n| `isOpen`  | `PropTypes.bool`  | Is the Dropdown open right now? |\n| `rightAligned` | `PropTypes.bool` | Whether to align the menu to the right side of the component. By default it's flush with the left. |\n| `onClose` | `PropTypes.func` | Callback function to run when the menu is closed. In the default implementation this happens on outside click. |\n| `target` | `PropTypes.node` | The dropdown button / click target. Clicking on this will generally open the menu. |\n\n### `DropdownButton` ([source](https://github.com/twineteam/react-multiselect-checkboxes/blob/master/src/lib/DropdownButton.jsx))\n\n| Prop | Type  | Description |\n| --- | --- | --- |\n| `children`| `PropTypes.node` | The contents of the dropdown button, generally a string. |\n| `onPress` | `PropTypes.func` | Callback function to run when the dropdown button is pressed. This will generally open the menu. |\n| `iconAfter` | `PropTypes.node` | An icon component to render after the button's contents. By default it's a down-facing chevron. |\n| `style`  | `PropTypes.object`  | The style to apply to the dropdown button. If you're doing custom styling, you'll probably ignore it. |\n\n### `DropdownButtonIcon` ([source](https://github.com/twineteam/react-multiselect-checkboxes/blob/master/src/lib/ChevronDown.jsx))\n\nNo props, this is just a down-facing chevron icon, in SVG form.\n\n## Road to 1.0\n\n- [ ] Fire up the Github.io site\n- [ ] Allow replacing more props (e.g. `Menu`)\n- [ ] Tests\n- [ ] More comprehensive storybook\n- [ ] ???\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": ""
  },
  "scripts": {
    "build": "npm run lib && npm run docs:prod && npm run build-storybook",
    "build-storybook": "build-storybook -o docs/storybook",
    "dev": "concurrently \"npm run lib:watch\" \"npm run docs\" \"npm run storybook\"",
    "docs": "webpack-dev-server --mode development",
    "docs:prod": "webpack --mode production",
    "lib": "babel src/lib -d lib --copy-files",
    "lib:watch": "babel src/lib -w -d lib --copy-files",
    "munge": "rm -rf node_modules/babel-core && cp -R node_modules/@babel/core node_modules/babel-core",
    "prebuild-storybook": "npm run munge",
    "prepare": "npm run build",
    "prestorybook": "npm run munge",
    "storybook": "start-storybook -p 6006"
  },
  "version": "0.1.1"
}
