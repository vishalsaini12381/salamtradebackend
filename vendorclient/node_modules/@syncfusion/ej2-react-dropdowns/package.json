{
  "_from": "@syncfusion/ej2-react-dropdowns",
  "_id": "@syncfusion/ej2-react-dropdowns@17.2.49",
  "_inBundle": false,
  "_integrity": "sha512-Eyfo+jlMIQmI+POU7Ngn4zFKWzMjg9fAgakQZw20wu1keyHCwO9NITPFXgWzj3IUODkDSxAt8jnGgQY3jjCJPg==",
  "_location": "/@syncfusion/ej2-react-dropdowns",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@syncfusion%2fej2-react-dropdowns",
    "fetchSpec": "latest",
    "name": "@syncfusion/ej2-react-dropdowns",
    "raw": "@syncfusion/ej2-react-dropdowns",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@syncfusion",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@syncfusion/ej2-react-dropdowns/-/ej2-react-dropdowns-17.2.49.tgz",
  "_shasum": "86e4406a6cb591d2880d64110a103b4863c9d7fc",
  "_spec": "@syncfusion/ej2-react-dropdowns",
  "_where": "/home/shivendra/Desktop/techoffice/salamvendor/vendorclient",
  "author": {
    "name": "Syncfusion Inc."
  },
  "bugs": {
    "url": "https://github.com/syncfusion/ej2-react-ui-components/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@syncfusion/ej2-base": "~17.2.49",
    "@syncfusion/ej2-dropdowns": "17.2.49",
    "@syncfusion/ej2-react-base": "~17.2.47"
  },
  "deprecated": false,
  "description": "Essential JS 2 DropDown Components for React",
  "devDependencies": {},
  "es2015": "dist/es6/ej2-react-dropdowns.es2015.js",
  "homepage": "https://github.com/syncfusion/ej2-react-ui-components#readme",
  "keywords": [
    "Syncfusion",
    "autocomplete",
    "combobox",
    "dropdownlist",
    "ej2",
    "ej2-react-dropdown",
    "multiselect",
    "react",
    "react-autocomplete",
    "react-combobox",
    "react-dropdownlist",
    "react-dropdowns",
    "react-multiselect",
    "select",
    "web-components"
  ],
  "license": "SEE LICENSE IN license",
  "main": "./dist/ej2-react-dropdowns.umd.min.js",
  "module": "./index.js",
  "name": "@syncfusion/ej2-react-dropdowns",
  "optionalDependencies": {},
  "readme": "# ej2-react-dropdowns\n\nSuperset of HTML select box contains specific features such as data binding, grouping, sorting, filtering, and templates.\n\n![Dropdowns](https://ej2.syncfusion.com/products/images/dropdowns/readme.gif)\n\n>Note: This is a commercial product and requires a paid license for possession or use. Syncfusionâ€™s licensed software, including this component, is subject to the terms and conditions of Syncfusion's EULA (https://www.syncfusion.com/eula/es/). To acquire a license, you can purchase one at https://www.syncfusion.com/sales/products or start a free 30-day trial here (https://www.syncfusion.com/account/manage-trials/start-trials).\n\n>A free community license (https://www.syncfusion.com/products/communitylicense) is also available for companies and individuals whose organizations have less than $1 million USD in annual gross revenue and five or fewer developers..\n\n## 1. Setup To install this package and its dependent packages, use the following command\n\nUse the following command to install drop-down components and its dependent packages\n\n```\nnpm install @syncfusion/ej2-react-dropdowns\n```\n\n## 2. Components included\n\n* DropDownList - A textbox component that allows users to select a non-editable single value from the list of predefined values.\n    * [GettingStarted](https://ej2.syncfusion.com/react/documentation/drop-down-list/getting-started)\n    * [View Online Demos](https://ej2.syncfusion.com/react/demos/#/material/drop-down-list/default)\n    * [Product Page](https://www.syncfusion.com/products/react/dropdownlist)\n* ComboBox - A textbox component that allows users to type a value or choose an option from the list of predefined options.\n    * [GettingStarted](https://ej2.syncfusion.com/react/documentation/combo-box/getting-started)\n    * [View Online Demos](https://ej2.syncfusion.com/react/demos/#/material/combo-box/default)\n    * [Product Page](https://www.syncfusion.com/products/react/combobox)\n* Autocomplete - A textbox component that provides a list of suggestions to select based on the text typed by the users.\n    * [GettingStarted](https://ej2.syncfusion.com/react/documentation/auto-complete/getting-started)\n    * [View Online Demos](https://ej2.syncfusion.com/react/demos/#/material/auto-complete/default)\n    * [Product Page](https://www.syncfusion.com/products/react/autocomplete)\n* MultiSelect - A textbox component that allows users to type or choose multiple values from the list of predefined options.\n    * [GettingStarted](https://ej2.syncfusion.com/react/documentation/multi-select/getting-started)\n    * [View Online Demos](https://ej2.syncfusion.com/react/demos/#/material/multi-select/default)\n    * [Product Page](https://www.syncfusion.com/products/react/multiselect)\n* ListBox - ListBox is a graphical user interface component used to display a list of items. Users can select one or more items in the list using a checkbox or by keyboard selection. It supports sorting, grouping, reordering, and drag and drop of items.\n    * [GettingStarted](https://ej2.syncfusion.com/react/documentation/list-box/getting-started)\n    * [View Online Demos](https://ej2.syncfusion.com/react/demos/#/material/list-box/default)\n    * [Product Page](https://www.syncfusion.com/products/react/listbox)\n\n## 3. Supported frameworks\n\nDrop-down components also supports the following frameworks:\n1.\t[TypeScript](https://ej2.syncfusion.com/demos/#/material)\n2.\t[Angular](https://ej2.syncfusion.com/angular/demos/#/material)\n3.\t[Vue.js](https://ej2.syncfusion.com/vue/demos/#/material)\n4.\t[ASP.NET Core](https://ej2.syncfusion.com/aspnetcore/)\n5.\t[ASP.NET MVC](https://ej2.syncfusion.com/aspnetcore/)\n6.\t[JavaScript (ES5)](https://ej2.syncfusion.com/javascript/demos/#/material)\n\n## 4. Use-case samples / Showcase samples\n\n* Expanse Tracker ([Live Demo](https://ej2.syncfusion.com/showcase/typescript/expensetracker/?utm_source=npm&utm_campaign=dropdown#/dashboard))\n* Loan Calculator ([Live Demo](https://ej2.syncfusion.com/showcase/typescript/loancalculator/?utm_source=npm&utm_campaign=dropdwonlist#/default))\n* Web Mail ([Live Demo](https://ej2.syncfusion.com/showcase/typescript/webmail/#/home))\n\n## 5. Key features\n* DropDownList\n    * [Data binding](https://ej2.syncfusion.com/react/demos/#/material/drop-down-list/data-binding): Binds and accesses the list of items from the local or server-side data source.\n    * [Grouping](https://ej2.syncfusion.com/react/demos/#/material/drop-down-list/grouping-icon): Groups the logically related items under a single or specific category.\n    * [Sorting](https://ej2.syncfusion.com/react/documentation/api/drop-down-list#sortorder): Sorts the list items in alphabetical order (either ascending or descending).\n    * [Filtering](https://ej2.syncfusion.com/react/demos/#/material/drop-down-list/filtering): Filters the list items based on a character typed in the search box.\n    * [Templates](https://ej2.syncfusion.com/react/demos/#/material/drop-down-list/template): Customizes the list items, selected value, header, footer, category group header, and no records content.\n    * [Accessibility](https://ej2.syncfusion.com/react/documentation/drop-down-list/accessibility): Provided with built-in accessibility support used to access all the DropDownList component features using keyboard, screen readers, or other assistive technology devices.\n\n\n* ComboBox\n    * [Data binding](https://ej2.syncfusion.com/react/demos/#/material/combo-box/data-binding): Binds and accesses the list of items from local or server-side data source.\n    * [Custom values](https://ej2.syncfusion.com/react/demos/#/material/combo-box/custom-value): Sets user-defined values that is not in the pop-up list.\n    * [Grouping](https://ej2.syncfusion.com/react/demos/#/material/combo-box/grouping-icon): Groups the logically related items under a single or specific category.\n    * [Sorting](https://ej2.syncfusion.com/react/documentation/api/combo-box#sortorder): Sorts the list items in alphabetical order (either ascending or descending).\n    * [Filtering](https://ej2.syncfusion.com/react/demos/#/material/combo-box/filtering): Filters the list items based on a character typed in the component.\n    * [Templates](https://ej2.syncfusion.com/react/demos/#/material/combo-box/template): Customizes the list items, selected value, header, footer, category group header, and no records content.\n    * [Accessibility](https://ej2.syncfusion.com/react/documentation/combo-box/accessibility): Provided with built-in accessibility support that helps to access all the ComboBox component features using the keyboard, screen readers, or other assistive technology devices.\n\n\n* AutoComplete\n    * [Data binding](https://ej2.syncfusion.com/react/demos/#/material/auto-complete/data-binding): Binds and accesses the list of items from local or server-side data source.\n    * [Grouping](https://ej2.syncfusion.com/react/demos/#/material/auto-complete/grouping-icon): Groups the logically related items under a single or specific category.\n    * [Sorting](https://ej2.syncfusion.com/react/documentation/api/auto-complete#sortorder): Sorts the list items in alphabetical order (either ascending or descending).\n    * [Highlight search](https://ej2.syncfusion.com/react/demos/#/material/auto-complete/highlight): Highlights the typed text in the suggestion list.\n    * [Templates](https://ej2.syncfusion.com/react/demos/#/material/auto-complete/template): Customizes the list item, header, footer, category group header, no records, and action failure content.\n    * [Accessibility](https://ej2.syncfusion.com/react/documentation/auto-complete/accessibility): Provided with built-in accessibility support that helps to access all the AutoComplete component features using keyboard, on-screen readers, or other assistive technology devices.\n\n\n* MultiSelect\n    * [Data binding](https://ej2.syncfusion.com/react/demos/#/material/multi-select/data-binding): Binds and accesses the list of items from local or server-side data source.\n    * [Grouping](https://ej2.syncfusion.com/react/demos/#/material/multi-select/grouping): Groups the logically related items under a single or specific category.\n    * [Templates](https://ej2.syncfusion.com/react/demos/#/material/multi-select/template): Customizes the list items, selected value, header, footer, category group header, and     no records content.\n    * [Sorting](https://ej2.syncfusion.com/react/documentation/api/multi-select#sortorder): Sorts the list items in alphabetical order (either ascending or descending).\n    * [Filtering](https://ej2.syncfusion.com/react/demos/#/material/multi-select/filtering): Filters the list items based on a character typed in the search box.\n    * [Custom value](https://ej2.syncfusion.com/react/demos/#/material/multi-select/custom-value): Allows users to select a new custom value.\n    * [Accessibility](https://ej2.syncfusion.com/react/documentation/multi-select/accessibility): Provided with built-in accessibility support that helps to access all the      DropDownList component features using the keyboard, screen readers, or other assistive technology devices.\n\n* ListBox\n    * **Data binding**: Binds and accesses the list of items from local or server-side data source.\n    * **Dual ListBox**: Allows transferring and reordering the list item between two ListBoxes.\n    * **Drag and Drop**: Allows drag and drop the list item with the same/multiple ListBox.\n    * **Grouping**: Groups the logically related items under a single or specific category.\n    * **Templates**: Customizes the list items.\n    * **Sorting**: Sorts the list items in alphabetical order (either ascending or descending).\n    * **Accessibility**: Provided with built-in accessibility support that helps to access all the ListBox component features using the keyboard, screen readers, or other assistive technology devices.\n\n## 6. Support\nProduct support can be obtained through the following mediums:\n* Creating incident in Syncfusion [Direct-trac](https://www.syncfusion.com/support/directtrac/incidents?utm_source=npm&utm_campaign=dropdwon) support system or [Community forum.](https://www.syncfusion.com/forums/essential-js2?utm_source=npm&utm_campaign=dropdwon)\n* New [GitHub issue.](https://github.com/syncfusion/ej2-react-ui-components/issues/new)\n* Ask your query in Stack Overflow with tag â€˜syncfusionâ€™, â€˜ej2â€™.\n\n \n## 7. License \nCheck the license details [here.](https://github.com/syncfusion/ej2/blob/master/license?utm_source=npm&utm_campaign=dropdown)\n\n## 8. Change log \n Check the changelog [here](https://github.com/syncfusion/ej2-react-ui-components/blob/master/components/dropdowns/CHANGELOG.md)\n\nÂ© Copyright 2019 Syncfusion, Inc. All Rights Reserved. The Syncfusion Essential Studio license and copyright applies to this distribution.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/syncfusion/ej2-react-ui-components.git"
  },
  "sideEffects": false,
  "version": "17.2.49"
}
