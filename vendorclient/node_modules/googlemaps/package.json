{
  "_from": "googlemaps",
  "_id": "googlemaps@1.12.0",
  "_inBundle": false,
  "_integrity": "sha1-Jdgqg0+yyYnnLHkXtdrydjnyz/s=",
  "_location": "/googlemaps",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "googlemaps",
    "fetchSpec": "latest",
    "name": "googlemaps",
    "raw": "googlemaps",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/googlemaps/-/googlemaps-1.12.0.tgz",
  "_shasum": "25d82a834fb2c989e72c7917b5daf27639f2cffb",
  "_spec": "googlemaps",
  "_where": "/home/shivendra/Desktop/techoffice/salamvendor/vendorclient",
  "author": {
    "email": "moshen.colin@gmail.com",
    "name": "Colin Kennedy",
    "url": "http://moshen.net"
  },
  "bugs": {
    "url": "https://github.com/moshen/node-googlemaps/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "check-types": "~1.3.2",
    "qs": "^4.0.0",
    "request": "^2.79.0",
    "waitress": ">=0.0.2"
  },
  "deprecated": false,
  "description": "A simple way to query the Google Maps API from Node.js",
  "devDependencies": {
    "mocha": "^2.4.5",
    "should": "^8.2.2"
  },
  "engines": {
    "node": ">=0.3.6"
  },
  "homepage": "https://github.com/moshen/node-googlemaps#readme",
  "keywords": [
    "api",
    "geo",
    "google",
    "google maps",
    "google-maps",
    "googlemaps",
    "map",
    "node google maps"
  ],
  "license": "MIT",
  "main": "lib/index",
  "name": "googlemaps",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/moshen/node-googlemaps.svg?branch=master)](https://travis-ci.org/moshen/node-googlemaps)\n\n# Google Maps API for Node.js\n\nThis library implements the following Google Maps APIs, and can be also used by Google Maps for Work users.\n\n* [Maps API Web Services](https://developers.google.com/maps/documentation/webservices/)\n* [Google Places API](https://developers.google.com/places/)\n* [Google Maps Image API](https://developers.google.com/maps/documentation/imageapis/)\n\nThis library is **NOT COMPATIBLE** with tags < `1.0.0`\n\nIf you want to migrate from a version older than `1.0.0` check the [WIKI](https://github.com/moshen/node-googlemaps/wiki/Migrate-from-v0.1.20-to-v1.0.x) for instructions.\n\n### Installation\n\n```\nnpm install googlemaps\n```\n\n### What does it cover\n[Maps API Web Services](https://developers.google.com/maps/documentation/webservices/):\n\n* [Directions](https://developers.google.com/maps/documentation/directions/)\n* [Distance matrix](https://developers.google.com/maps/documentation/distancematrix/)\n* [Elevation](https://developers.google.com/maps/documentation/elevation/) - TO BE IMPROVED\n* [Geocoding and reverse geocoding](https://developers.google.com/maps/documentation/geocoding)\n* [Time zone](https://developers.google.com/maps/documentation/timezone)\n\n[Google Places API](https://developers.google.com/places/) - NOT COMPLETED\n\n* [Place search](https://developers.google.com/places/documentation/search)\n* [Place details](https://developers.google.com/places/documentation/details)\n* [Place autocomplete](https://developers.google.com/places/web-service/autocomplete)\n* [Place text search](https://developers.google.com/places/web-service/search#TextSearchRequests)\n\n[Google Maps Image API](https://developers.google.com/maps/documentation/imageapis/)\n\n* [Static maps](https://developers.google.com/maps/documentation/staticmaps/)\n* [Street view](https://developers.google.com/maps/documentation/streetview/) - TO BE IMPROVED\n\n\n### Usage\n\n```javascript\nvar publicConfig = {\n  key: '<YOUR-KEY>',\n  stagger_time:       1000, // for elevationPath\n  encode_polylines:   false,\n  secure:             true, // use https\n  proxy:              'http://127.0.0.1:9999' // optional, set a proxy for HTTP requests\n};\nvar gmAPI = new GoogleMapsAPI(publicConfig);\n\n// or in case you are using Google Maps for Work\nvar enterpriseConfig = {\n  google_client_id:   '<YOUR-CLIENT-ID>', // to use Google Maps for Work\n  google_private_key: '<YOUR-PRIVATE-KEY>', // to use Google Maps for Work\n  google_channel:     '<YOUR-CHANNEL>' // to use Google Maps for Work application usage tracking\n  stagger_time:       1000, // for elevationPath\n  encode_polylines:   false,\n  secure:             true, // use https\n  proxy:              'http://127.0.0.1:9999' // optional, set a proxy for HTTP requests\n};\nvar gmAPI = new GoogleMapsAPI(enterpriseConfig);\n\n// geocode API\nvar geocodeParams = {\n  \"address\":    \"121, Curtain Road, EC2A 3AD, London UK\",\n  \"components\": \"components=country:GB\",\n  \"bounds\":     \"55,-1|54,1\",\n  \"language\":   \"en\",\n  \"region\":     \"uk\"\n};\n\ngmAPI.geocode(geocodeParams, function(err, result){\n  console.log(result);\n});\n\n// reverse geocode API\nvar reverseGeocodeParams = {\n  \"latlng\":        \"51.1245,-0.0523\",\n  \"result_type\":   \"postal_code\",\n  \"language\":      \"en\",\n  \"location_type\": \"APPROXIMATE\"\n};\n\ngmAPI.reverseGeocode(reverseGeocodeParams, function(err, result){\n  console.log(result);\n});\n```\n\nCheck out the [unit tests](./tree/new-major-version/test/unit/) for more APIs examples.\n\n### Static Maps\n\n```javascript\nvar gmAPI = new GoogleMapsAPI();\nvar params = {\n  center: '444 W Main St Lock Haven PA',\n  zoom: 15,\n  size: '500x400',\n  maptype: 'roadmap',\n  markers: [\n    {\n      location: '300 W Main St Lock Haven, PA',\n      label   : 'A',\n      color   : 'green',\n      shadow  : true\n    },\n    {\n      location: '444 W Main St Lock Haven, PA',\n      icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_icon&chld=cafe%7C996600'\n    }\n  ],\n  style: [\n    {\n      feature: 'road',\n      element: 'all',\n      rules: {\n        hue: '0x00ff00'\n      }\n    }\n  ],\n  path: [\n    {\n      color: '0x0000ff',\n      weight: '5',\n      points: [\n        '41.139817,-77.454439',\n        '41.138621,-77.451596'\n      ]\n    }\n  ]\n};\ngmAPI.staticMap(params); // return static map URL\ngmAPI.staticMap(params, function(err, binaryImage) {\n  // fetch asynchronously the binary image\n});\n```\nThis example prints the URL for the Static Map image: \"https://maps.googleapis.com/maps/api/staticmap?center=444%20W%20Main%20St%20Lock%20Haven%20PA&zoom=15&size=500x400&maptype=roadmap&markers=color%3Agreen%7Clabel%3AA%7Cshadow%3Atrue%7C300%20W%20Main%20St%20Lock%20Haven%2C%20PA&markers=icon%3Ahttp%3A%2F%2Fchart.apis.google.com%2Fchart%3Fchst%3Dd_map_pin_icon%26chld%3Dcafe%257C996600%7C444%20W%20Main%20St%20Lock%20Haven%2C%20PA&path=weight%3A5%7Ccolor%3A0x0000ff%7Cenc%3A%7BbbzFfyvwMnFwP&style=feature%3Aroad%7Celement%3Aall%7Chue%3A0x00ff00\"\n\nBy giving gm.staticMap an optional callback, you can retreive the static map PNG data:\n\n\nYou will get a map like:\n\n![Some Map](https://maps.googleapis.com/maps/api/staticmap?center=444%20W%20Main%20St%20Lock%20Haven%20PA&zoom=15&size=500x400&maptype=roadmap&markers=color%3Agreen%7Clabel%3AA%7Cshadow%3Atrue%7C300%20W%20Main%20St%20Lock%20Haven%2C%20PA&markers=icon%3Ahttp%3A%2F%2Fchart.apis.google.com%2Fchart%3Fchst%3Dd_map_pin_icon%26chld%3Dcafe%257C996600%7C444%20W%20Main%20St%20Lock%20Haven%2C%20PA&path=weight%3A5%7Ccolor%3A0x0000ff%7Cenc%3A%7BbbzFfyvwMnFwP&style=feature%3Aroad%7Celement%3Aall%7Chue%3A0x00ff00)\n\nFor custom markers using the `icon` parameter, a little-known `scale` parameter is also available that makes it possible to use high-resolution custom images on devices  with retina displays. Set it to 2 and use it together with a `@2x` *http-only* image URL (Google's API does not support custom marker images served over https), such as:\n\n```\n{\n  location: '999 Example Road, Earth',\n  icon: 'http://example.com/path/to/custom-marker@2x.png',\n  scale: 2\n}\n```\n\nCredits to [this answer on SO](http://stackoverflow.com/questions/10336646/how-can-i-use-high-resolution-custom-markers-with-the-scale-parameter-in-google/17130379#17130379).\n\n### Street view\n\n```javascript\nvar gmAPI = new GoogleMapsAPI();\nvar params = {\n  location: '51.507868,-0.087689',\n  size: '1200x1600',\n  heading: 108.4,\n  pitch: 7,\n  fov: 40\n};\nvar result = gmAPI.streetView(params);\n```\n\n![London - Tower Bridge from London Bridge](https://maps.googleapis.com/maps/api/streetview?location=51.507868,-0.087689&size=1200x1600&heading=108.4&fov=40&pitch=7)\n\n### Further examples\n\nPlease refer to the code, [tests](http://github.com/moshen/node-googlemaps/tree/master/test/) and the [Google Maps API docs](https://developers.google.com/maps/web-services/) for further usage information.\n\n\n### Contributions\nCriticism/Suggestions/Patches/PullRequests are welcome.\n\n\n### Original contributors list\n\n[![evnm](https://secure.gravatar.com/avatar/2a8171b6c385b865e30bf070cf588329?s=50)](https://github.com/evnm)\n[![duncanm](https://secure.gravatar.com/avatar/7310945bafb21aa68b18d61d8b9d2d61?s=50)](https://github.com/duncanm)\n[![sugendran](https://secure.gravatar.com/avatar/3228aae57c1dc3f657bbc64c26c97b77?s=50)](https://github.com/sugendran)\n[![JoshSmith](https://secure.gravatar.com/avatar/b07d5a5f2e75633b2085142250a6762b?s=50)](https://github.com/JoshSmith)\n[![grobot](https://secure.gravatar.com/avatar/ba3313effc329919b09bca67827bdf10?s=50)](https://github.com/grobot)\n[![regality](https://secure.gravatar.com/avatar/fe513a9e239cebde58187721d67b7505?s=50)](https://github.com/regality)\n[![spatical](https://secure.gravatar.com/avatar/a7c5765a4a4dfbf697f728bd75223641?s=50)](https://github.com/spatical)\n\n### v1.0.0 maintener\n[![moshen](https://avatars0.githubusercontent.com/u/168513?v=3&s=50)](https://github.com/moshen)\n[![fabriziomoscon](https://avatars1.githubusercontent.com/u/721890?v=3&u=b5079f5258887f4cc9a6de1cbadee230bca8ecc1&s=50)](https://github.com/fabriziomoscon)\n\nContributions and new issues are welcome!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/moshen/node-googlemaps.git"
  },
  "scripts": {
    "all-tests": "mocha test/unit test/integration",
    "integration-test": "mocha test/integration",
    "test": "mocha test/unit"
  },
  "version": "1.12.0"
}
