'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var PropTypes = _interopDefault(require('prop-types'));

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = "/* add css styles here (optional) */\n\n.styles_snap__-Kx2R {\n  flex-basis: 200px;\n  scroll-snap-align: start;\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.styles_sliderArrowsContainer__1aca3 {\n  position: relative;\n  display: flex;\n  justify-content: center;\n}\n\n.styles_sliderArrowsChildren__1W54N {\n  display: flex;\n  overflow: auto;\n  max-width: 100%;\n  scroll-behavior: smooth;\n  scroll-snap-type: x mandatory;\n}\n\n.styles_sliderArrowsArrow__3jVB9 {\n  z-index: 999;\n  align-content: center;\n  cursor: pointer;\n  transition: opacity 250ms;\n  border: 0;\n  outline: none;\n}\n\n.styles_sliderArrowsChildren__1W54N::-webkit-scrollbar {\n  display: none;\n}\n\n.styles_sliderArrowsArrowSmall__39u8G {\n  min-width: 2rem;\n  max-width: 2rem;\n}\n\n.styles_sliderArrowsArrowMedium__4wT1v {\n  min-width: 3rem;\n  max-width: 3rem;\n}\n\n.styles_sliderArrowsArrowLarge__uovKa {\n  min-width: 4rem;\n  max-width: 4rem;\n}\n\n.styles_sliderArrowsArrowXLarge__1PbGX {\n  min-width: 5rem;\n  max-width: 5rem;\n}\n\n.styles_sliderArrowsActive__2Y57P {\n  opacity: 1;\n}\n\n.styles_sliderArrowsInactive__1APyV {\n  cursor: default;\n  opacity: .5;\n}\n";
var styles = { "snap": "styles_snap__-Kx2R", "sliderArrowsContainer": "styles_sliderArrowsContainer__1aca3", "sliderArrowsChildren": "styles_sliderArrowsChildren__1W54N", "sliderArrowsArrow": "styles_sliderArrowsArrow__3jVB9", "sliderArrowsArrowSmall": "styles_sliderArrowsArrowSmall__39u8G", "sliderArrowsArrowMedium": "styles_sliderArrowsArrowMedium__4wT1v", "sliderArrowsArrowLarge": "styles_sliderArrowsArrowLarge__uovKa", "sliderArrowsArrowXLarge": "styles_sliderArrowsArrowXLarge__1PbGX", "sliderArrowsActive": "styles_sliderArrowsActive__2Y57P", "sliderArrowsInactive": "styles_sliderArrowsInactive__1APyV" };
styleInject(css);

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

var RightArrow = function RightArrow() {
  return React__default.createElement('div', { dangerouslySetInnerHTML: { __html: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 129 129' xmlns:xlink='http://www.w3.org/1999/xlink' enable-background='new 0 0 129 129'><g><path d='m40.4,121.3c-0.8,0.8-1.8,1.2-2.9,1.2s-2.1-0.4-2.9-1.2c-1.6-1.6-1.6-4.2 0-5.8l51-51-51-51c-1.6-1.6-1.6-4.2 0-5.8 1.6-1.6 4.2-1.6 5.8,0l53.9,53.9c1.6,1.6 1.6,4.2 0,5.8l-53.9,53.9z'/></g></svg>" } });
};

var LeftArrow = function LeftArrow() {
  return React__default.createElement('div', { dangerouslySetInnerHTML: { __html: "<svg version='1.1' id='Capa_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 477.175 477.175' style='enable-background:new 0 0 477.175 477.175;' xml:space='preserve'><g><path d='M145.188,238.575l215.5-215.5c5.3-5.3,5.3-13.8,0-19.1s-13.8-5.3-19.1,0l-225.1,225.1c-5.3,5.3-5.3,13.8,0,19.1l225.1,225c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4c5.3-5.3,5.3-13.8,0-19.1L145.188,238.575z'/></g></svg>" } });
};

var SliderArrows = function (_Component) {
  inherits(SliderArrows, _Component);

  function SliderArrows(props) {
    classCallCheck(this, SliderArrows);

    var _this = possibleConstructorReturn(this, (SliderArrows.__proto__ || Object.getPrototypeOf(SliderArrows)).call(this, props));

    _this.between = function (x, min, max) {
      return x >= min && x <= max;
    };

    _this.handleScroll = function (direction) {
      var childLength = _this.sliderRef.current.children[0].offsetWidth;
      var distanceToScroll = childLength;

      if (_this.state.right === false && direction === 'right') {
        _this.sliderRef.current.scrollLeft = 0;
      } else if (_this.state.left === false && direction === 'left') {
        _this.sliderRef.current.scrollLeft = _this.sliderRef.current.scrollWidth;
      }

      if (direction === 'right') {
        _this.sliderRef.current.scrollLeft += distanceToScroll;
      } else if (direction === 'left') {
        _this.sliderRef.current.scrollLeft -= distanceToScroll;
      }
    };

    _this.handleScrolled = function () {
      var offsetW = _this.sliderRef.current.offsetWidth;
      var scrollL = _this.sliderRef.current.scrollLeft;
      var clientW = _this.sliderRef.current.clientWidth;
      var scrollR = Math.floor(_this.sliderRef.current.scrollWidth - (scrollL + clientW));

      if (_this.between(offsetW + scrollL, offsetW - 5, offsetW + 5)) {
        _this.setState({ left: false });
      } else {
        _this.setState({ left: true });
      }

      if (_this.between(offsetW + scrollR, offsetW - 5, offsetW + 5)) {
        _this.setState({ right: false });
      } else {
        _this.setState({ right: true });
      }
    };

    _this.state = {
      left: false,
      right: true,
      timeout: null,
      childLength: null
    };

    _this.sliderRef = React__default.createRef();
    return _this;
  }

  createClass(SliderArrows, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.setState({ childLength: this.sliderRef.current.children[0].offsetWidth });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          arrowSize = _props.arrowSize,
          productsInView = _props.productsInView,
          leftArr = _props.leftArr,
          rightArr = _props.rightArr;


      var showLeft = this.state.left ? styles.sliderArrowsActive : styles.sliderArrowsInactive;
      var showRight = this.state.right ? styles.sliderArrowsActive : styles.sliderArrowsInactive;

      var size = void 0;
      if (arrowSize === 'small') {
        size = styles.sliderArrowsArrowSmall;
      } else if (arrowSize === 'medium') {
        size = styles.sliderArrowsArrowMedium;
      } else if (arrowSize === 'large') {
        size = styles.sliderArrowsArrowLarge;
      } else if (arrowSize === 'xlarge') {
        size = styles.sliderArrowsArrowXLarge;
      } else {
        size = styles.sliderArrowsArrowSmall;
      }

      var width = void 0;
      if (typeof productsInView === 'string') {
        width = '100%';
      } else if (typeof productsInView === 'number') {
        width = this.state.childLength * productsInView + 'px';
      }

      var childrenWithWrapperDiv = React__default.Children.map(children, function (child) {
        return React__default.createElement(
          'div',
          { className: styles.snap },
          child
        );
      });

      return React__default.createElement(
        'div',
        { className: styles.sliderArrowsContainer },
        React__default.createElement(
          'button',
          {
            'aria-label': 'left slider button',
            onClick: function onClick() {
              return _this2.handleScroll('left');
            },
            className: [styles.sliderArrowsArrow, size, styles.sliderArrowsArrowLeft].join(' ') },
          React__default.createElement(
            'div',
            { className: showLeft },
            leftArr ? leftArr : React__default.createElement(LeftArrow, null)
          )
        ),
        React__default.createElement(
          'div',
          {
            style: { width: width },
            onScroll: function onScroll() {
              clearTimeout(_this2.state.timeout);
              _this2.setState({
                timeout: setTimeout(function () {
                  _this2.handleScrolled();
                }, 100)
              });
            },
            ref: this.sliderRef,
            className: styles.sliderArrowsChildren
          },
          childrenWithWrapperDiv
        ),
        React__default.createElement(
          'button',
          {
            'aria-label': 'right slider button',
            onClick: function onClick() {
              return _this2.handleScroll('right');
            },
            className: [styles.sliderArrowsArrow, size, styles.sliderArrowsArrowRight].join(' ') },
          React__default.createElement(
            'div',
            { className: showRight },
            rightArr ? rightArr : React__default.createElement(RightArrow, null)
          )
        )
      );
    }
  }]);
  return SliderArrows;
}(React.Component);

SliderArrows.defaultProps = {
  arrowSize: 'small',
  productsInView: 2
};

SliderArrows.propTypes = {
  arrowSize: PropTypes.string,
  productsInView: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired
};

module.exports = SliderArrows;
//# sourceMappingURL=index.js.map
