{"ast":null,"code":"var _jsxFileName = \"/home/shivendra/Desktop/salamtrades/salamclient/src/forgotpassword/forgotpasswordpage.js\";\nimport React from 'react';\nimport validator from 'validator';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport './forgotpasswordpage.css';\n\nclass Forgotpasswordpage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: {\n        value: \"\",\n        isValidate: true,\n        message: ''\n      },\n      cpassword: {\n        value: \"\",\n        isValidate: true,\n        message: ''\n      }\n    };\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.handleChangeConfirmPassword = this.handleChangeConfirmPassword.bind(this);\n    this.savePassword = this.savePassword.bind(this);\n  }\n\n  handleChangePassword(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    let state = this.state;\n    state[name].message = \"\";\n    state[name].value = value;\n    this.setState(state);\n  }\n\n  handleChangeConfirmPassword(event) {\n    const _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n    let state = this.state;\n    state[name].message = \"\";\n    state[name].value = value;\n    this.setState(state);\n  }\n\n  validate() {\n    let state = this.state;\n\n    if (validator.isEmpty(state.password.value)) {\n      state.password.isValidate = false;\n      state.password.message = \"Password Can Not Be Blank\";\n      this.setState(state);\n      return false;\n    }\n\n    if (validator.isEmpty(state.cpassword.value)) {\n      state.cpassword.isValidate = false;\n      state.cpassword.message = \"Confirm Password Can not be Blank\";\n      this.setState(state);\n      return false;\n    }\n\n    return true;\n  }\n\n  savePassword(event) {\n    event.preventDefault();\n    let isValid = this.validate();\n\n    if (isValid) {\n      var obj = {};\n      obj.password = this.state['password'].value;\n      obj.cpassword = this.state['cpassword'].value;\n      console.log('object', obj);\n      axios.post('http://localhost:3100/api/resetPassword', obj).then(response => {\n        console.log('response', response);\n\n        if (response.data.status === true) {\n          swal(\"Successful\", \"\".concat(response.data.message), \"success\").then(d => {\n            console.log('dddddddd', d);\n            if (d) return this.props.history.replace('/');\n          });\n        } else {\n          swal(\"Error\", \"\".concat(response.data.message), \"error\").then(d => {\n            console.log('fffffffffffff', d);\n            if (d) return window.location = \"/Forgotpassword\";\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const state = this.state;\n    return React.createElement(\"div\", {\n      className: \"Container-fluid forgot-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"forgotpassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Choose a New Password\"), React.createElement(\"form\", {\n      action: \"\",\n      onSubmit: this.savePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"pwd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: state.password.value,\n      onChange: this.handleChangePassword,\n      placeholder: \"Enter password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, state.password.message)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"pwd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Confirm New Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"cpassword\",\n      value: state.cpassword.value,\n      onChange: this.handleChangePassword,\n      placeholder: \"Enter Confirm password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, state.cpassword.message)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Forgotpasswordpage;","map":{"version":3,"sources":["/home/shivendra/Desktop/salamtrades/salamclient/src/forgotpassword/forgotpasswordpage.js"],"names":["React","validator","swal","axios","Forgotpasswordpage","Component","constructor","props","state","password","value","isValidate","message","cpassword","handleChangePassword","bind","handleChangeConfirmPassword","savePassword","event","target","name","setState","validate","isEmpty","preventDefault","isValid","obj","console","log","post","then","response","data","status","d","history","replace","window","location","render","fontSize","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport validator from 'validator';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport './forgotpasswordpage.css';\nclass Forgotpasswordpage extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      password : {value : \"\", isValidate : true, message :''},\n      cpassword : {value: \"\", isValidate : true , message: ''},\n    }\n\n    this.handleChangePassword          =   this.handleChangePassword.bind(this);\n    this.handleChangeConfirmPassword   =   this.handleChangeConfirmPassword.bind(this);\n    this.savePassword                  =   this.savePassword.bind(this);\n  }\n\n  handleChangePassword(event){\n    const {name, value} = event.target;\n    let state = this.state;\n    state[name].message = \"\";\n    state[name].value = value;\n    this.setState(state);\n  }\n\n  handleChangeConfirmPassword(event){\n    const{name, value} = event.target;\n    let state = this.state;\n    state[name].message = \"\";\n    state[name].value = value;\n    this.setState(state);\n  }\n\n  validate(){\n    let state = this.state;\n\n    if(validator.isEmpty(state.password.value)){\n      state.password.isValidate = false;\n      state.password.message = \"Password Can Not Be Blank\";\n      this.setState(state);\n      return false;\n    }\n\n    if(validator.isEmpty(state.cpassword.value)){\n      state.cpassword.isValidate = false;\n      state.cpassword.message = \"Confirm Password Can not be Blank\";\n      this.setState(state);\n      return false;\n    }\n    return true;\n  }\n\n  savePassword(event){\n    event.preventDefault();\n    let isValid = this.validate();\n    if(isValid){\n    var obj = {};\n    obj.password  = this.state['password'].value;\n    obj.cpassword = this.state['cpassword'].value;\n    console.log('object',obj);\n\n    axios.post('http://localhost:3100/api/resetPassword',obj).then((response)=>{\n      console.log('response',response);\n      if(response.data.status === true){\n        swal(\"Successful\",\n        `${response.data.message}`,\n        \"success\",\n        ).then((d)=>{\n          console.log('dddddddd',d);\n          if(d) return this.props.history.replace('/');\n        })\n      }else{\n        swal(\"Error\",\n        `${response.data.message}`,\n        \"error\",\n        ).then((d)=>{\n          console.log('fffffffffffff',d);\n          if(d) return window.location = \"/Forgotpassword\";\n        })\n      }\n    })\n  }\n  }\n\n\trender()\n\t{\n    const state = this.state;\n\t\treturn(\n      <div className=\"Container-fluid forgot-fluid\">\n        <div className=\"container\">\n         <div className=\"forgotpassword\">\n           <h3>Choose a New Password</h3>\n            <form action=\"\" onSubmit={this.savePassword}>\n              <div className=\"form-group\">\n                <label for=\"pwd\">New Password</label>\n                <input type=\"password\" className=\"form-control\" name = \"password\" value = {state.password.value} onChange = {this.handleChangePassword} placeholder=\"Enter password\" />\n                <div style={{ fontSize: 13, color: \"red\" }}>\n                  {state.password.message}\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label for=\"pwd\">Confirm New Password</label>\n                <input type=\"password\" className=\"form-control\" name = \"cpassword\" value = {state.cpassword.value} onChange = {this.handleChangePassword}  placeholder=\"Enter Confirm password\" />\n                <div style={{ fontSize: 13, color: \"red\" }}>\n                  {state.cpassword.message}\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-default\">Submit</button>\n            </form>\n         </div>\n        </div>\n      </div>\n\n\t\t\t)\n\t}\n}\n\nexport default Forgotpasswordpage;"]},"metadata":{},"sourceType":"module"}