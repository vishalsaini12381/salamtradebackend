{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var o = function (t, e) {\n    return (o = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (t, e) {\n      t.__proto__ = e;\n    } || function (t, e) {\n      for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);\n    })(t, e);\n  };\n\n  return function (t, e) {\n    function i() {\n      this.constructor = t;\n    }\n\n    o(t, e), t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());\n  };\n}(),\n    __assign = this && this.__assign || function () {\n  return (__assign = Object.assign || function (t) {\n    for (var e, i = 1, o = arguments.length; i < o; i++) for (var s in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, s) && (t[s] = e[s]);\n\n    return t;\n  }).apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar React = require(\"react\"),\n    utils_1 = require(\"./utils\"),\n    Dots_1 = require(\"./Dots\"),\n    Arrows_1 = require(\"./Arrows\"),\n    CarouselItems_1 = require(\"./CarouselItems\"),\n    defaultTransitionDuration = 400,\n    defaultTransition = \"transform 400ms ease-in-out\",\n    Carousel = function (i) {\n  function t(t) {\n    var e = i.call(this, t) || this;\n    return e.containerRef = React.createRef(), e.state = {\n      itemWidth: 0,\n      slidesToShow: 0,\n      currentSlide: 0,\n      totalItems: React.Children.count(t.children),\n      deviceType: \"\",\n      domLoaded: !1,\n      transform: 0,\n      containerWidth: 0\n    }, e.onResize = e.onResize.bind(e), e.handleDown = e.handleDown.bind(e), e.handleMove = e.handleMove.bind(e), e.handleOut = e.handleOut.bind(e), e.onKeyUp = e.onKeyUp.bind(e), e.handleEnter = e.handleEnter.bind(e), e.setIsInThrottle = e.setIsInThrottle.bind(e), e.next = utils_1.throttle(e.next.bind(e), t.transitionDuration || defaultTransitionDuration, e.setIsInThrottle), e.previous = utils_1.throttle(e.previous.bind(e), t.transitionDuration || defaultTransitionDuration, e.setIsInThrottle), e.goToSlide = utils_1.throttle(e.goToSlide.bind(e), t.transitionDuration || defaultTransitionDuration, e.setIsInThrottle), e.onMove = !1, e.initialX = 0, e.lastX = 0, e.isAnimationAllowed = !1, e.direction = \"\", e.initialY = 0, e.isInThrottle = !1, e;\n  }\n\n  return __extends(t, i), t.prototype.setIsInThrottle = function (t) {\n    void 0 === t && (t = !1), this.isInThrottle = t;\n  }, t.prototype.componentDidMount = function () {\n    this.setState({\n      domLoaded: !0\n    }), this.setItemsToShow(), window.addEventListener(\"resize\", this.onResize), this.onResize(!0), this.props.keyBoardControl && window.addEventListener(\"keyup\", this.onKeyUp), this.props.autoPlay && this.props.autoPlaySpeed && (this.autoPlay = setInterval(this.next, this.props.autoPlaySpeed));\n  }, t.prototype.setClones = function (t, e, i) {\n    var o = this;\n    this.isAnimationAllowed = !1;\n    var s = React.Children.toArray(this.props.children),\n        n = utils_1.getInitialSlideInInifteMode(t || this.state.slidesToShow, s),\n        r = utils_1.getClones(this.state.slidesToShow, s);\n    utils_1.notEnoughChildren(this.state, this.props, t) || this.setState({\n      totalItems: r.length,\n      currentSlide: i ? this.state.currentSlide : n\n    }, function () {\n      o.correctItemsPosition(e || o.state.itemWidth);\n    });\n  }, t.prototype.setItemsToShow = function (r) {\n    var a = this,\n        h = this.props.responsive;\n    Object.keys(h).forEach(function (t) {\n      var e = h[t],\n          i = e.breakpoint,\n          o = e.items,\n          s = i.max,\n          n = i.min;\n      window.innerWidth >= n && window.innerWidth <= s && (a.setState({\n        slidesToShow: o,\n        deviceType: t\n      }), a.setContainerAndItemWidth(o, r));\n    });\n  }, t.prototype.setContainerAndItemWidth = function (t, e) {\n    var i = this;\n\n    if (this.containerRef && this.containerRef.current) {\n      var o = this.containerRef.current.offsetWidth,\n          s = utils_1.getItemClientSideWidth(this.props, t, o);\n      this.setState({\n        containerWidth: o,\n        itemWidth: s\n      }, function () {\n        i.props.infinite && i.setClones(t, s, e);\n      }), e && this.correctItemsPosition(s);\n    }\n  }, t.prototype.correctItemsPosition = function (t, e) {\n    e && (this.isAnimationAllowed = !0), !e && this.isAnimationAllowed && (this.isAnimationAllowed = !1), this.setState({\n      transform: -t * this.state.currentSlide\n    });\n  }, t.prototype.onResize = function (t) {\n    var e;\n    e = !!this.props.infinite && (\"boolean\" != typeof t || !t), this.setItemsToShow(e);\n  }, t.prototype.componentDidUpdate = function (t, e) {\n    var i = this,\n        o = t.keyBoardControl,\n        s = t.autoPlay,\n        n = e.containerWidth,\n        r = e.domLoaded;\n    this.containerRef && this.containerRef.current && this.containerRef.current.offsetWidth !== n && setTimeout(function () {\n      i.setItemsToShow(!0);\n    }, this.props.transitionDuration || defaultTransitionDuration), o && !this.props.keyBoardControl && window.removeEventListener(\"keyup\", this.onKeyUp), s && !this.props.autoPlay && this.autoPlay && (clearInterval(this.autoPlay), this.autoPlay = void 0), s || !this.props.autoPlay || this.autoPlay || (this.autoPlay = setInterval(this.next, this.props.autoPlaySpeed)), this.props.infinite && this.correctClonesPosition({\n      domLoaded: r\n    });\n  }, t.prototype.correctClonesPosition = function (t) {\n    var e = this,\n        i = t.domLoaded,\n        o = React.Children.toArray(this.props.children),\n        s = utils_1.checkClonesPosition(this.state, o, this.props),\n        n = s.isReachingTheEnd,\n        r = s.isReachingTheStart,\n        a = s.nextSlide,\n        h = s.nextPosition;\n    this.state.domLoaded && i && (n || r) && (this.isAnimationAllowed = !1, setTimeout(function () {\n      e.setState({\n        transform: h,\n        currentSlide: a\n      });\n    }, this.props.transitionDuration || defaultTransitionDuration));\n  }, t.prototype.next = function (t) {\n    var e = this;\n    void 0 === t && (t = 0);\n    var i = this.props,\n        o = i.afterChange,\n        s = i.beforeChange;\n\n    if (!utils_1.notEnoughChildren(this.state, this.props)) {\n      var n = utils_1.populateNextSlides(this.state, this.props, t),\n          r = n.nextSlides,\n          a = n.nextPosition,\n          h = this.state.currentSlide;\n      void 0 !== r && void 0 !== a && (\"function\" == typeof s && s(r, this.getState()), this.isAnimationAllowed = !0, this.setState({\n        transform: a,\n        currentSlide: r\n      }, function () {\n        \"function\" == typeof o && setTimeout(function () {\n          o(h, e.getState());\n        }, e.props.transitionDuration || defaultTransitionDuration);\n      }));\n    }\n  }, t.prototype.previous = function (t) {\n    var e = this;\n    void 0 === t && (t = 0);\n    var i = this.props,\n        o = i.afterChange,\n        s = i.beforeChange;\n\n    if (!utils_1.notEnoughChildren(this.state, this.props)) {\n      var n = utils_1.populatePreviousSlides(this.state, this.props, t),\n          r = n.nextSlides,\n          a = n.nextPosition;\n\n      if (void 0 !== r && void 0 !== a) {\n        var h = this.state.currentSlide;\n        \"function\" == typeof s && s(r, this.getState()), this.isAnimationAllowed = !0, this.setState({\n          transform: a,\n          currentSlide: r\n        }, function () {\n          \"function\" == typeof o && setTimeout(function () {\n            o(h, e.getState());\n          }, e.props.transitionDuration || defaultTransitionDuration);\n        });\n      }\n    }\n  }, t.prototype.componentWillUnmount = function () {\n    window.removeEventListener(\"resize\", this.onResize), this.props.keyBoardControl && window.removeEventListener(\"keyup\", this.onKeyUp), this.props.autoPlay && this.autoPlay && (clearInterval(this.autoPlay), this.autoPlay = void 0);\n  }, t.prototype.resetMoveStatus = function () {\n    this.onMove = !1, this.initialX = 0, this.lastX = 0, this.direction = \"\", this.initialY = 0;\n  }, t.prototype.handleDown = function (t) {\n    if (!(t.touches && !this.props.swipeable || !t.touches && !this.props.draggable || this.isInThrottle)) {\n      var e = t.touches ? t.touches[0] : t,\n          i = e.clientX,\n          o = e.clientY;\n      this.onMove = !0, this.initialX = i, this.initialY = o, this.lastX = i, this.isAnimationAllowed = !1;\n    }\n  }, t.prototype.handleMove = function (t) {\n    if (!(t.touches && !this.props.swipeable || t && !t.touches && !this.props.draggable || utils_1.notEnoughChildren(this.state, this.props))) {\n      var e = t.touches ? t.touches[0] : t,\n          i = e.clientX,\n          o = e.clientY,\n          s = this.initialX - i,\n          n = this.initialY - o;\n\n      if (t.touches && this.autoPlay && this.props.autoPlay && (clearInterval(this.autoPlay), this.autoPlay = void 0), this.onMove) {\n        if (!(Math.abs(s) > Math.abs(n))) return;\n        var r = utils_1.populateSlidesOnMouseTouchMove(this.state, this.props, this.initialX, this.lastX, i),\n            a = r.direction,\n            h = r.nextPosition,\n            l = r.canContinue;\n        a && (this.direction = a, l && void 0 !== h && this.setState({\n          transform: h\n        })), this.lastX = i;\n      }\n    }\n  }, t.prototype.handleOut = function (t) {\n    this.props.autoPlay && !this.autoPlay && (this.autoPlay = setInterval(this.next, this.props.autoPlaySpeed));\n    var e = \"touchend\" === t.type && !this.props.swipeable,\n        i = (\"mouseleave\" === t.type || \"mouseup\" === t.type) && !this.props.draggable;\n\n    if (!e && !i && this.onMove) {\n      if (\"right\" === this.direction) if (this.initialX - this.lastX >= this.props.minimumTouchDrag) {\n        var o = Math.round((this.initialX - this.lastX) / this.state.itemWidth);\n        this.next(o);\n      } else this.correctItemsPosition(this.state.itemWidth, !0);\n      if (\"left\" === this.direction) if (this.lastX - this.initialX > this.props.minimumTouchDrag) {\n        o = Math.round((this.lastX - this.initialX) / this.state.itemWidth);\n        this.previous(o);\n      } else this.correctItemsPosition(this.state.itemWidth, !0);\n      this.resetMoveStatus();\n    }\n  }, t.prototype.onKeyUp = function (t) {\n    switch (t.keyCode) {\n      case 37:\n        return this.previous();\n\n      case 39:\n        return this.next();\n    }\n  }, t.prototype.handleEnter = function () {\n    this.autoPlay && this.props.autoPlay && (clearInterval(this.autoPlay), this.autoPlay = void 0);\n  }, t.prototype.goToSlide = function (t) {\n    var e = this;\n\n    if (!this.isInThrottle) {\n      var i = this.state.itemWidth,\n          o = this.props,\n          s = o.afterChange,\n          n = o.beforeChange,\n          r = this.state.currentSlide;\n      \"function\" == typeof n && n(t, this.getState()), this.isAnimationAllowed = !0, this.setState({\n        currentSlide: t,\n        transform: -i * t\n      }, function () {\n        e.props.infinite && e.correctClonesPosition({\n          domLoaded: !0\n        }), \"function\" == typeof s && setTimeout(function () {\n          s(r, e.getState());\n        }, e.props.transitionDuration || defaultTransitionDuration);\n      });\n    }\n  }, t.prototype.getState = function () {\n    return __assign({}, this.state, {\n      onMove: this.onMove,\n      direction: this.direction\n    });\n  }, t.prototype.renderLeftArrow = function () {\n    var t = this,\n        e = this.props.customLeftArrow;\n    return React.createElement(Arrows_1.LeftArrow, {\n      customLeftArrow: e,\n      getState: function () {\n        return t.getState();\n      },\n      previous: this.previous\n    });\n  }, t.prototype.renderRightArrow = function () {\n    var t = this,\n        e = this.props.customRightArrow;\n    return React.createElement(Arrows_1.RightArrow, {\n      customRightArrow: e,\n      getState: function () {\n        return t.getState();\n      },\n      next: this.next\n    });\n  }, t.prototype.renderButtonGroups = function () {\n    var e = this,\n        t = this.props.customButtonGroup;\n    return t ? React.cloneElement(t, {\n      previous: function () {\n        return e.previous();\n      },\n      next: function () {\n        return e.next();\n      },\n      goToSlide: function (t) {\n        return e.goToSlide(t);\n      },\n      carouselState: this.getState()\n    }) : null;\n  }, t.prototype.renderDotsList = function () {\n    var t = this;\n    return React.createElement(Dots_1.default, {\n      state: this.state,\n      props: this.props,\n      goToSlide: this.goToSlide,\n      getState: function () {\n        return t.getState();\n      }\n    });\n  }, t.prototype.renderCarouselItems = function () {\n    var t = [];\n\n    if (this.props.infinite) {\n      var e = React.Children.toArray(this.props.children);\n      t = utils_1.getClones(this.state.slidesToShow, e);\n    }\n\n    return React.createElement(CarouselItems_1.default, {\n      clones: t,\n      goToSlide: this.goToSlide,\n      state: this.state,\n      props: this.props\n    });\n  }, t.prototype.render = function () {\n    var t = this.props,\n        e = t.deviceType,\n        i = t.arrows,\n        o = t.removeArrowOnDeviceType,\n        s = t.infinite,\n        n = t.containerClass,\n        r = t.sliderClass,\n        a = t.customTransition,\n        h = t.partialVisbile,\n        l = t.centerMode,\n        u = t.additionalTransfrom,\n        p = t.renderDotsOutside,\n        d = t.className;\n    \"production\" !== process.env.NODE_ENV && utils_1.throwError(this.state, this.props);\n\n    var c = utils_1.getInitialState(this.state, this.props),\n        f = c.shouldRenderOnSSR,\n        m = c.paritialVisibilityGutter,\n        v = c.shouldRenderAtAll,\n        y = utils_1.isInLeftEnd(this.state),\n        S = utils_1.isInRightEnd(this.state),\n        g = i && !(o && (e && -1 < o.indexOf(e) || this.state.deviceType && -1 < o.indexOf(this.state.deviceType))) && !utils_1.notEnoughChildren(this.state, this.props) && v,\n        w = !s && y,\n        T = !s && S,\n        _ = h ? utils_1.getTransformForPartialVsibile(this.state, m, this.props) : l ? utils_1.getTransformForCenterMode(this.state, this.props) : this.state.transform;\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"react-multi-carousel-list \" + n + \" \" + d,\n      ref: this.containerRef\n    }, React.createElement(\"ul\", {\n      className: \"react-multi-carousel-track \" + r,\n      style: {\n        transition: this.isAnimationAllowed ? a || defaultTransition : \"none\",\n        overflow: f ? \"hidden\" : \"unset\",\n        transform: \"translate3d(\" + (_ + u) + \"px,0,0)\"\n      },\n      onMouseMove: this.handleMove,\n      onMouseDown: this.handleDown,\n      onMouseUp: this.handleOut,\n      onMouseEnter: this.handleEnter,\n      onMouseLeave: this.handleOut,\n      onTouchStart: this.handleDown,\n      onTouchMove: this.handleMove,\n      onTouchEnd: this.handleOut\n    }, this.renderCarouselItems()), g && !w && this.renderLeftArrow(), g && !T && this.renderRightArrow(), v && this.renderButtonGroups(), v && !p && this.renderDotsList()), v && p && this.renderDotsList());\n  }, t.defaultProps = {\n    slidesToSlide: 1,\n    infinite: !1,\n    draggable: !0,\n    swipeable: !0,\n    arrows: !0,\n    containerClass: \"\",\n    sliderClass: \"\",\n    itemClass: \"\",\n    keyBoardControl: !0,\n    autoPlaySpeed: 3e3,\n    showDots: !1,\n    renderDotsOutside: !1,\n    minimumTouchDrag: 80,\n    dotListClass: \"\",\n    focusOnSelect: !1,\n    centerMode: !1,\n    additionalTransfrom: 0\n  }, t;\n}(React.Component);\n\nexports.default = Carousel;","map":null,"metadata":{},"sourceType":"script"}