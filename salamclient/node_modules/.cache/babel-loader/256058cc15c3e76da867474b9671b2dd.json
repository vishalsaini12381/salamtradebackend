{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Slider = function (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  function Slider(props) {\n    _classCallCheck(this, Slider);\n\n    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));\n\n    _this.btnPrevious = function () {\n      var animation = _this.props.animation;\n\n      switch (animation) {\n        case 'fade':\n          _this.slideFadePrevious();\n\n          break;\n\n        case 'moveHorizontal':\n          _this.slideMoveHorizontalPrevious();\n\n          break;\n\n        case 'moveVertical':\n          _this.slideMoveVerticalPrevious();\n\n          break;\n\n        default:\n          _this.slideFadePrevious();\n\n      }\n    };\n\n    _this.btnNext = function () {\n      var animation = _this.props.animation;\n\n      switch (animation) {\n        case 'fade':\n          _this.slideFadeNext();\n\n          break;\n\n        case 'moveHorizontal':\n          _this.slideMoveHorizontalNext();\n\n          break;\n\n        case 'moveVertical':\n          _this.slideMoveVerticalNext();\n\n          break;\n\n        default:\n          _this.slideFadeNext();\n\n      }\n    };\n\n    _this.slider = null;\n    _this.sliderItems = [];\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: 'slideFadePrevious',\n\n    /**\n     * fade slide previous\n     */\n    value: function slideFadePrevious() {\n      var currItem = this.getCurrentItem();\n      var prevItem = this.getPreviousItem(); // place previous slide above current slide\n\n      prevItem.style.zIndex = parseInt(currItem.style.zIndex) + 1; // fade out current slide while fading in next slide just by using css animations\n\n      currItem.style.opacity = 0;\n      prevItem.style.opacity = 1; // change active slide\n\n      prevItem.classList.add('active');\n      currItem.classList.remove('active');\n    }\n    /**\n     * slide fade next\n     */\n\n  }, {\n    key: 'slideFadeNext',\n    value: function slideFadeNext() {\n      var currItem = this.getCurrentItem();\n      var nextItem = this.getNextItem(); // place next slide above current slide\n\n      nextItem.style.zIndex = parseInt(currItem.style.zIndex) + 1; // fade out current slide while fading in next slide just by using css animations\n\n      currItem.style.opacity = 0;\n      nextItem.style.opacity = 1; // change active slide\n\n      nextItem.classList.add('active');\n      currItem.classList.remove('active');\n    }\n    /**\n     * slide move horizontal previous\n     */\n\n  }, {\n    key: 'slideMoveHorizontalPrevious',\n    value: function slideMoveHorizontalPrevious() {\n      var _this2 = this;\n\n      var speed = this.props.speed;\n      var currItem = this.getCurrentItem();\n      var prevItem = this.getPreviousItem();\n      prevItem.style.transition = 'none';\n      prevItem.style.left = '-' + this.getSliderWidth() + 'px';\n      window.setTimeout(function () {\n        prevItem.style.transition = _this2.getSliderTransition();\n        currItem.style.left = _this2.getSliderWidth() + 'px';\n        prevItem.style.left = 0;\n        prevItem.classList.add('active');\n        currItem.classList.remove('active');\n      }, 10);\n    }\n    /**\n     * slide move horizontal next\n     */\n\n  }, {\n    key: 'slideMoveHorizontalNext',\n    value: function slideMoveHorizontalNext() {\n      var _this3 = this;\n\n      var speed = this.props.speed;\n      var currItem = this.getCurrentItem();\n      var nextItem = this.getNextItem(); // place next slide next to current slide\n\n      nextItem.style.transition = 'none';\n      nextItem.style.left = this.getSliderWidth() + 'px';\n      window.setTimeout(function () {\n        nextItem.style.transition = _this3.getSliderTransition();\n        currItem.style.left = '-' + _this3.getSliderWidth() + 'px';\n        nextItem.style.left = 0;\n        nextItem.classList.add('active');\n        currItem.classList.remove('active');\n      }, 10);\n    }\n    /**\n     * slide move vertical previous\n     */\n\n  }, {\n    key: 'slideMoveVerticalPrevious',\n    value: function slideMoveVerticalPrevious() {\n      var _this4 = this;\n\n      var speed = this.props.speed;\n      var currItem = this.getCurrentItem();\n      var prevItem = this.getPreviousItem();\n      prevItem.style.transition = 'none';\n      prevItem.style.top = '-' + this.getSliderHeight() + 'px';\n      window.setTimeout(function () {\n        prevItem.style.transition = _this4.getSliderTransition();\n        currItem.style.top = _this4.getSliderHeight() + 'px';\n        prevItem.style.top = 0;\n        prevItem.classList.add('active');\n        currItem.classList.remove('active');\n      }, 10);\n    }\n    /**\n     * slide move vertical next\n     */\n\n  }, {\n    key: 'slideMoveVerticalNext',\n    value: function slideMoveVerticalNext() {\n      var _this5 = this;\n\n      var speed = this.props.speed;\n      var currItem = this.getCurrentItem();\n      var nextItem = this.getNextItem(); // place next slide next to current slide\n\n      nextItem.style.transition = 'none';\n      nextItem.style.top = this.getSliderHeight() + 'px';\n      window.setTimeout(function () {\n        nextItem.style.transition = _this5.getSliderTransition();\n        currItem.style.top = '-' + _this5.getSliderHeight() + 'px';\n        nextItem.style.top = 0;\n        nextItem.classList.add('active');\n        currItem.classList.remove('active');\n      }, 10);\n    }\n    /**\n     * get current slider item\n     * @return {object}\n     */\n\n  }, {\n    key: 'getCurrentItem',\n    value: function getCurrentItem() {\n      for (var i = 0; i < this.sliderItems.length; i++) {\n        var item = this.sliderItems[i];\n\n        if (item.classList.contains('active')) {\n          return item;\n        }\n      }\n    }\n    /**\n     * get previous slider item\n     * @return {object}\n     */\n\n  }, {\n    key: 'getPreviousItem',\n    value: function getPreviousItem() {\n      for (var i = 0; i < this.sliderItems.length; i++) {\n        var item = this.sliderItems[i];\n\n        if (item.classList.contains('active')) {\n          if (i === 0) {\n            return this.sliderItems[this.sliderItems.length - 1];\n          }\n\n          return this.sliderItems[i - 1];\n        }\n      }\n    }\n    /**\n     * get next slider item\n     * @return {object}\n     */\n\n  }, {\n    key: 'getNextItem',\n    value: function getNextItem() {\n      for (var i = 0; i < this.sliderItems.length; i++) {\n        var item = this.sliderItems[i];\n\n        if (item.classList.contains('active')) {\n          if (i === this.sliderItems.length - 1) {\n            return this.sliderItems[0];\n          }\n\n          return this.sliderItems[i + 1];\n        }\n      }\n    }\n    /**\n     * get slider transition\n     * @return {string}\n     */\n\n  }, {\n    key: 'getSliderTransition',\n    value: function getSliderTransition() {\n      var _props = this.props,\n          speed = _props.speed,\n          easing = _props.easing;\n      return 'all ' + speed + 'ms ' + easing;\n    }\n    /**\n     * get slider width\n     * @return {number}\n     */\n\n  }, {\n    key: 'getSliderWidth',\n    value: function getSliderWidth() {\n      return this.slider.clientWidth;\n    }\n    /**\n     * get slider height\n     * @return {number}\n     */\n\n  }, {\n    key: 'getSliderHeight',\n    value: function getSliderHeight() {\n      return this.slider.clientHeight;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var animation = this.props.animation;\n      this.slider = this.refs['slide-me-container'];\n      this.sliderItems = this.slider.querySelectorAll('.slider-item');\n\n      for (var i = 0; i < this.sliderItems.length; i++) {\n        var item = this.sliderItems[i];\n\n        if (item.classList.contains('active')) {\n          switch (animation) {\n            case 'fade':\n              item.style.opacity = 1;\n              break;\n\n            case 'moveHorizontal':\n              item.style.left = 0;\n              break;\n\n            case 'moveVertical':\n              item.style.top = 0;\n              break;\n\n            default:\n              item.style.opacity = 1;\n          }\n        }\n      }\n    }\n    /**\n     * all the visual magic happens here\n     * @return jsx/html\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          items = _props2.items,\n          size = _props2.size,\n          type = _props2.type,\n          speed = _props2.speed,\n          animation = _props2.animation;\n      var styles = {\n        container: {\n          position: 'relative',\n          display: 'inline-block',\n          width: size.width,\n          height: size.height,\n          overflow: 'hidden'\n        },\n        containerItem: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: size.width,\n          height: size.height,\n          zIndex: 100,\n          transition: this.getSliderTransition()\n        },\n        btnPrevious: {\n          position: 'absolute',\n          left: '10px',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: '99999'\n        },\n        btnNext: {\n          position: 'absolute',\n          right: '10px',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          zIndex: '99999'\n        }\n      };\n\n      switch (animation) {\n        case 'fade':\n          styles.containerItem.opacity = 0;\n          break;\n\n        case 'moveHorizontal':\n          styles.containerItem.left = size.width;\n          break;\n\n        case 'moveVertical':\n          styles.containerItem.top = size.height;\n          break;\n\n        default:\n          styles.containerItem.opacity = 0;\n      }\n\n      var mapedItems = [];\n\n      if (type === 'image') {\n        mapedItems = items.map(function (item, index) {\n          var itemClass = 'slider-item';\n\n          if (index === 0) {\n            itemClass = itemClass + ' active';\n          }\n\n          if (typeof item === 'string') {\n            return _react2.default.createElement('div', {\n              key: index,\n              ref: 'slider-item',\n              style: styles.containerItem,\n              className: itemClass\n            }, _react2.default.createElement('img', {\n              key: index,\n              src: item,\n              alt: item\n            }));\n          } else if ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object') {\n            return _react2.default.createElement('div', {\n              key: index,\n              ref: 'slider-item',\n              style: styles.containerItem,\n              className: itemClass\n            }, _react2.default.createElement('img', {\n              src: item.url,\n              alt: item.alt\n            }));\n          }\n        });\n      }\n\n      return _react2.default.createElement('div', {\n        ref: 'slide-me-container',\n        className: this.uniqueSliderID,\n        style: styles.container\n      }, _react2.default.createElement('button', {\n        style: styles.btnPrevious,\n        onClick: this.btnPrevious\n      }, 'previous'), _react2.default.createElement('button', {\n        style: styles.btnNext,\n        onClick: this.btnNext\n      }, 'next'), mapedItems);\n    }\n  }]);\n\n  return Slider;\n}(_react2.default.Component);\n\nSlider.propTypes = {\n  items: _react2.default.PropTypes.array,\n  type: _react2.default.PropTypes.string,\n  size: _react2.default.PropTypes.object,\n  animation: _react2.default.PropTypes.string,\n  speed: _react2.default.PropTypes.number,\n  easing: _react2.default.PropTypes.string\n};\nSlider.defaultProps = {\n  animation: 'fade',\n  speed: 1000,\n  easing: 'linear'\n};\nexports.default = Slider;","map":null,"metadata":{},"sourceType":"script"}