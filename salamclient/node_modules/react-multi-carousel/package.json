{
  "_from": "react-multi-carousel",
  "_id": "react-multi-carousel@2.2.2",
  "_inBundle": false,
  "_integrity": "sha512-fdU8sfj5bOwdEztKrIj634RtMr/gC0gzk536UbF8DXf/mGjnh8Z9tPLCun3dELi/TdhlB+9WGSkpJoQdVdAr8Q==",
  "_location": "/react-multi-carousel",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-multi-carousel",
    "fetchSpec": "latest",
    "name": "react-multi-carousel",
    "raw": "react-multi-carousel",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-multi-carousel/-/react-multi-carousel-2.2.2.tgz",
  "_shasum": "4c7c0b1352fef67565a0f49a7e43a21ccbedf2b2",
  "_spec": "react-multi-carousel",
  "_where": "/home/shivendra/Desktop/techoffice/salamtrade/salamclient",
  "author": {
    "name": "YI ZHUANG",
    "url": "https://yizhuang.fi/"
  },
  "bugs": {
    "url": "https://github.com/YIZHUANG/react-multi-carousel/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Production-ready, lightweight fully customizable React carousel component that rocks supports multiple items and SSR(Server-side rendering) with typescript.",
  "devDependencies": {
    "@babel/core": "^7.3.4",
    "@material-ui/core": "^3.9.2",
    "@smartive/tslint-config": "^6.0.0",
    "@storybook/addon-actions": "^4.1.13",
    "@storybook/addon-links": "^4.1.13",
    "@storybook/addon-viewport": "^4.1.13",
    "@storybook/addons": "^4.1.13",
    "@storybook/react": "^4.1.13",
    "@types/enzyme": "^3.9.0",
    "@types/enzyme-adapter-react-16": "^1.0.5",
    "@types/jest": "^24.0.9",
    "@types/react": "^16.8.13",
    "@types/react-dom": "^16.8.2",
    "awesome-typescript-loader": "^5.2.1",
    "babel-loader": "^8.0.5",
    "classnames": "^2.2.6",
    "copyfiles": "^2.1.0",
    "enzyme": "^3.9.0",
    "enzyme-adapter-react-16": "^1.10.0",
    "enzyme-to-json": "^3.3.5",
    "faker": "^4.1.0",
    "husky": "^1.3.1",
    "jest": "^24.1.0",
    "lint-staged": "^8.1.5",
    "prettier": "^1.16.4",
    "react": "^16.8.3",
    "react-dom": "^16.8.3",
    "react-ga": "^2.5.7",
    "storybook-addon-jsx": "^6.0.0",
    "ts-jest": "^24.0.2",
    "tslint": "^5.16.0",
    "typescript": "^3.4.3",
    "uglify-js": "^3.5.11",
    "uglifycss": "0.0.29"
  },
  "engines": {
    "node": ">=8"
  },
  "homepage": "https://w3js.com/react-multi-carousel/",
  "jest": {
    "collectCoverage": true,
    "globals": {
      "__LINK_PREFIX__": "",
      "__PREFIX_LINKS__": "",
      "ts-jest": {
        "diagnostics": false
      }
    },
    "moduleFileExtensions": [
      "js",
      "ts",
      "tsx"
    ],
    "testEnvironment": "jsdom",
    "testMatch": [
      "**/*spec.(ts|tsx)"
    ],
    "testURL": "http://localhost",
    "transform": {
      "^.+\\.(ts|tsx)$": "ts-jest"
    },
    "verbose": true
  },
  "keywords": [
    "breakpoint",
    "carousel",
    "drag",
    "gallery",
    "image-gallery",
    "mobile-friendly",
    "multiple items",
    "react",
    "react-component",
    "responsive",
    "server-side rendering",
    "slide-show",
    "slider",
    "ssr",
    "swipe",
    "tablet-friendly",
    "touch",
    "typescript",
    "video-gallery"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "react-multi-carousel",
  "optionalDependencies": {},
  "private": false,
  "readme": "# react-multi-carousel üëã\n\nProduction-ready, lightweight fully customizable React carousel component that rocks supports multiple items and SSR(Server-side rendering) with typescript.\n\nDon't forget to leave a star if this project help you reduce time to develop.\n\n[![Package Quality](https://npm.packagequality.com/shield/react-multi-carousel.svg)](https://packagequality.com/#?package=react-multi-carousel)\n[![npm version](https://badge.fury.io/js/react-multi-carousel.svg)](https://www.npmjs.com/package/react-multi-carousel)\n[![Build Status](https://api.travis-ci.org/YIZHUANG/react-multi-carousel.svg?branch=master)](https://travis-ci.org/YIZHUANG/react-multi-carousel)\n<a href=\"https://w3js.com/react-multi-carousel\">\n<img alt=\"Documentation\" src=\"https://img.shields.io/badge/documentation-yes-brightgreen.svg\" target=\"_blank\" />\n</a>\n<a href=\"https://github.com/YIZHUANG/react-multi-carousel/graphs/commit-activity\">\n<img alt=\"Maintenance\" src=\"https://img.shields.io/badge/Maintained%3F-yes-green.svg\" target=\"_blank\" />\n</a>\n<a href=\"https://github.com/YIZHUANG/react-multi-carousel/blob/master/LICENSE\">\n<img alt=\"License: MIT\" src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" target=\"_blank\" />\n</a>\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FYIZHUANG%2Freact-multi-carousel.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2FYIZHUANG%2Freact-multi-carousel?ref=badge_shield)\n[![David Dependancy Status](https://david-dm.org/YIZHUANG/react-multi-carousel.svg)](https://david-dm.org/YIZHUANG/react-multi-carousel)\n[![Known Vulnerabilities](https://snyk.io/test/github/YIZHUANG/react-multi-carousel/badge.svg?targetFile=package.json)](https://snyk.io/test/github/YIZHUANG/react-multi-carousel?targetFile=package.json)\n\n![demo](https://media.giphy.com/media/emNGIfso7Iu66qz53C/giphy.gif)\n\n![demo](https://media.giphy.com/media/3octyw2XELzfaplNUm/giphy.gif)\n\n### Breaking changes in 2.0.\n\nThis only concerns the people who are using the dots.\n\n- The behavior of the dot mode now has been changed and improved to be responsive and all the edge cases are handled nicely. For a better look please refer to the demo in the [documentation](https://w3js.com/react-multi-carousel).\n- slidesToSlide can now be added for each break-point in the responsive props if specified, otherwise the this.props.slidesToSlide is used by default. New usage can be found either below or [here](https://github.com/YIZHUANG/react-multi-carousel/blob/master/src/types.ts).\n\nThis documentation of this change can also be found at the [release log](https://github.com/YIZHUANG/react-multi-carousel/releases/tag/2.0)\n\n### Features.\n\n- Server-side rendering\n- Infinite mode\n- Dot mode\n- Custom animation\n- AutoPlay mode\n- Auto play interval\n- Supports images, videos, everything.\n- Responsive\n- Swipe to slide\n- Mouse drag to slide\n- Keyboard control to slide\n- Multiple items\n- Show / hide arrows\n- Custom arrows / control buttons\n- Custom dots\n- Custom styling\n- Accessibility support\n- Center mode.\n- Show next/previous set of items partially\n\n### Shoutouts üôè\n\n<img src=\"/browserstack-logo-600x315.png\" height=\"80\" title=\"BrowserStack Logo\" alt=\"BrowserStack Logo\" />\n\nBig thanks to [BrowserStack](https://www.browserstack.com) for letting the maintainers use their service to debug browser issues.\n\n## [Documentation](https://w3js.com/react-multi-carousel/)\n\n## Show your support\n\nGive a ‚≠êÔ∏è if this project helped you!\n\n## Other important links.\n\n- [Code sandbox](https://codesandbox.io/embed/2omn67p8kj)\n- [Contributing](https://github.com/YIZHUANG/react-multi-carousel/blob/master/contributing.md)\n- [Changelog](https://github.com/YIZHUANG/react-multi-carousel/blob/master/CHANGELOG.md)\n- [Releases](https://github.com/YIZHUANG/react-multi-carousel/releases)\n- [TypeScript usage](https://github.com/YIZHUANG/react-multi-carousel/blob/master/TypeScriptUsage.md)\n- [SSR demo](https://react-multi-carousel.now.sh/)\n\n## Bundle size\n\n[Bundle-size](https://bundlephobia.com/result?p=react-multi-carousel).\n2.5kB\n\n## Demo.\n\nDocumentation is [here](https://w3js.com/react-multi-carousel/).\n\nDemo for the SSR <https://react-multi-carousel.now.sh/>\n\nTry to disable JavaScript to test if it renders on the server-side.\n\nCodes for SSR at [github](https://github.com/YIZHUANG/react-multi-carousel/blob/master/examples/ssr/pages/index.js).\n\nCodes for the documentation at [github](https://github.com/YIZHUANG/react-multi-carousel/blob/master/stories/index.stories.js).\n\n## Install\n\n```\n$ npm install react-multi-carousel --save\n\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\n```\n\n### How the SSR mode works?\n\nCodes for SSR at [github](https://github.com/YIZHUANG/react-multi-carousel/blob/master/examples/ssr/pages/index.js).\n\n- Demo for the SSR are at [here](https://react-multi-carousel.now.sh/)\n- Try to disable JavaScript to test if it renders on the server-side.\n\nHere is a lighter version of the library for detecting the user's device type [alternative](https://github.com/faisalman/ua-parser-js)\n\nIf you are using Nextjs, you can choose to only bundle it on the server-side.\n\n## Common Usage\n\n```js\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\n\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 3,\n    slidesToSlide: 3, // optional, default to 1.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n    slidesToSlide: 2, // optional, default to 1.\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n};\n<Carousel\n  swipeable={false}\n  draggable={false}\n  showDots={true}\n  responsive={responsive}\n  ssr={true} // means to render carousel on server-side.\n  infinite={true}\n  autoPlay={this.props.deviceType !== \"mobile\" ? true : false}\n  autoPlaySpeed={1000}\n  keyBoardControl={true}\n  customTransition=\"all .5\"\n  transitionDuration={500}\n  containerClass=\"carousel-container\"\n  removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n  deviceType={this.props.deviceType}\n  dotListClass=\"custom-dot-list-style\"\n  itemClass=\"carousel-item-padding-40-px\"\n>\n  <div>Item 1</div>\n  <div>Item 2</div>\n  <div>Item 3</div>\n  <div>Item 4</div>\n</Carousel>;\n```\n\n## Custom Arrows.\n\nYou can pass your own custom arrows to make it the way you want, the same for the position. For example, add media query for the arrows to go under when on smaller screens.\n\nYou custom arrows will receive a list of props/state that's passed back by the carousel such as the currentSide, is dragging or swiping in progress.\n\n[An Example](https://w3js.com/react-multi-carousel/?selectedKind=Carousel&selectedStory=Custom%20arrow&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel)\n\n[Code](https://github.com/YIZHUANG/react-multi-carousel/blob/master/stories/CustomArrows.js)\n\n```js\nconst CustomRightArrow = ({ onClick, ...rest }) => {\n  const {\n    onMove,\n    state: { currentSlide, deviceType },\n  } = rest;\n  // onMove means if dragging or swiping in progress.\n  return <button onClick={() => onClick()} />;\n};\n<Carousel customRightArrow={<CustomRightArrow />} />;\n```\n\n## Custom button group.\n\nThis is very useful if you don't want the dots, or arrows and you want to fully customize the control functionality and styling yourself.\n\n[Example](https://w3js.com/react-multi-carousel/?selectedKind=Carousel&selectedStory=With%20custom%20button%20group&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel)\n\n[Code](https://github.com/YIZHUANG/react-multi-carousel/blob/master/stories/CustomArrows.js)\n\n```js\nconst ButtonGroup = ({ next, previous, goToSlide ...rest }) => {\n  const { carouselState: { currentSlide } } = rest;\n  return (\n    <div className=\"carousel-button-group\"> // remember to give it position:absolute\n      <ButtonOne className={currentSlide === 0 : 'disable' : ''} onClick={() => previous()} />\n      <ButtonTwo onClick={() => next()} />\n      <ButtonThree onClick={() => goToSlide(currentSlide + 1)}> Go to any slide </ButtonThree>\n    </div>\n  );\n};\n<Carousel arrows={false} customButtonGroup={<ButtonGroup />}>\n  <ItemOne>\n  <ItemTwo>\n</Carousel>\n```\n\n## Custom dots.\n\nYou can pass your own custom dots to replace the default one.\n\nCustom dots can also be a copy or an image of your carousel item. See example in this [one](https://react-multi-carousel.now.sh/)\n\nThe codes for this [example](https://github.com/YIZHUANG/react-multi-carousel/blob/master/examples/ssr/components/carousel-with-custom-dots.js)\n\nYou custom dots will receive a list of props/state that's passed back by the carousel such as the currentSide, is dragging or swiping in progress.\n\n[An Example](https://w3js.com/react-multi-carousel/?selectedKind=Carousel&selectedStory=custom%20dots&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel)\n\n[Code](https://github.com/YIZHUANG/react-multi-carousel/blob/master/stories/CustomDot.js)\n\n```js\nconst CustomDot = ({ onClick, ...rest }) => {\n  const { onMove, index, active, carouselState: { currentSlide, deviceType }  } = rest;\n  const carouselItems = [<CarouselItem1, CaourselItem2, CarouselItem3];\n  // onMove means if dragging or swiping in progress.\n  // active is provided by this lib for checking if the item is active or not.\n  return (\n    <button className={active ? 'active' : 'inactive'} onClick={() => onClick()}>\n      {React.Children.toArray(carouselItems)[index]}\n    </button>\n    )\n}\n<Carousel showDots customDot={<CustomDot />}>\n{carouselItems}\n</Carousel>\n```\n\n## partialVisbile props.\n\nShows the next items paritially, this is very useful if you want to indicate to the users that this carousel component is swipable, has more items behind it.\n\nThis is different from the \"centerMode\" prop, as it only shows the next items. For the centerMode, it shows both.\n\n[An Example](https://w3js.com/react-multi-carousel/?selectedKind=Carousel&selectedStory=paritially%20visibie%20on%20next%20items&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel).\n\n```js\nconst responsive = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 3,\n    paritialVisibilityGutter: 40 // this is needed to tell the amount of px that should be visible.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2,\n    paritialVisibilityGutter: 30 // this is needed to tell the amount of px that should be visible.\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n    paritialVisibilityGutter: 30 // this is needed to tell the amount of px that should be visible.\n  }\n}\n<Carousel partialVisbile={true} responsive={responsive}>\n  <ItemOne />\n  <ItemTwo />\n</Carousel>\n```\n\n## centerMode\n\nShows the next items and previous items paritially.\n\n```js\n<Carousel centerMode={true} />\n```\n\n## afterChange callback.\n\nThis is a callback function that is invoked each time when there has been a sliding.\n\n[An Example](https://w3js.com/react-multi-carousel/?selectedKind=Carousel&selectedStory=afterChanged%20function%2C%20a%20callback%20function&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel).\n\n```js\n<Carousel\n  afterChange={(previousSlide, { currentSlide, onMove }) => {\n    doSpeicalThing();\n  }}\n/>\n```\n\n## beforeChange call back\n\nThis is a callback function that is invoked each time before a sliding.\n\n[An Example](https://w3js.com/react-multi-carousel/?selectedKind=Carousel&selectedStory=beforeChanged%20function%2C%20a%20callback%20function&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel).\n\n```js\n<Carousel\n  beforeChange={(nextSlide, { currentSlide, onMove }) => {\n    doSpeicalThing();\n  }}\n/>\n```\n\n## Combine beforeChange and nextChange, real usage.\n\nThey are very useful in the following cases:\n\n- The carousel item is clickable, but you don't want it to be clickable while the user is dragging it or swiping it.\n\n```js\n<Carousel\n  beforeChange={() => this.setState({ isMoving: true })}\n  afterChange={() => this.setState({ isMoving: false })}\n>\n  <a\n    onClick={e => {\n      if (this.state.isMoving) {\n        e.preventDefault();\n      }\n    }}\n    href=\"https://w3js.com\"\n  >\n    Click me\n  </a>\n</Carousel>\n```\n\n- Preparing for the next slide.\n\n```js\n<Carousel beforeChange={nextSlide => this.setState({ nextSlide: nextSlide })}>\n  <div>Initial slide</div>\n  <div\n    onClick={() => {\n      if (this.state.nextSlide === 1) {\n        doVerySpecialThing();\n      }\n    }}\n  >\n    Second slide\n  </div>\n</Carousel>\n```\n\n## focusOnSelect\n\nGo to slide on click and make the slide a current slide.\n\n```js\n<Carousel focusOnSelect={true} />\n```\n\n## Using ref.\n\n```js\n<Carousel ref={(el) => (this.Carousel = el)} arrows={false} responsive={responsive}>\n  <ItemOne />\n  <ItemTwo />\n</Carousel>\n<button onClick={() => {\n    const nextSlide = this.Carousel.state.currentSlide + 1;\n     // this.Carousel.next()\n     // this.Carousel.goToSlide(nextSlide)\n  }}>Click me</button>\n```\n\n## additionalTransfrom Props.\n\nThis is very useful when you are fully customizing the control functionality by yourself like this [one](https://w3js.com/react-multi-carousel/?selectedKind=Carousel&selectedStory=With%20custom%20control%20functionality&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel)\n\n[Code](https://github.com/YIZHUANG/react-multi-carousel/blob/master/stories/WithScrollbar.js)\n\nFor example if you give to your carousel item padding left and padding right 20px. And you have 5 items in total, you might want to do the following:\n\n```js\n<Carousel ref={el => (this.Carousel = el)} additionalTransfrom={-20 * 5} /> // it needs to be a negative number\n```\n\n## Specific Props\n\n| Name                    |                                                                        Type                                                                        |              Default              | Description                                                                                                                                                           |\n| :---------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------: | :-------------------------------: | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| responsive              |                                                                      `object`                                                                      |               `{}`                | Numbers of slides to show at each breakpoint                                                                                                                          |\n| deviceType              |                                                                      `string`                                                                      |               `''`                | Only pass this when use for server-side rendering, what to pass can be found in the example folder                                                                    |\n| ssr                     |                                                                     `boolean`                                                                      |              `false`              | Use in conjunction with responsive and deviceType prop                                                                                                                |\n| slidesToSlide           |                                                                      `Number`                                                                      |                `1`                | How many slides to slide.                                                                                                                                             |\n| draggable               |                                                                     `boolean`                                                                      |              `true`               | Optionally disable/enable dragging on desktop                                                                                                                         |\n| swipeable               |                                                                     `boolean`                                                                      |              `true`               | Optionally disable/enable swiping on mobile                                                                                                                           |\n| arrows                  |                                                                     `boolean`                                                                      |              `true`               | Hide/Show the default arrows                                                                                                                                          |\n| removeArrowOnDeviceType |                                                                 `string or array`                                                                  |               `''`                | Hide the default arrows at different break point, should be used with `responsive` props. Value could be `mobile` or `['mobile', 'tablet'], can be a string or array` |\n| customLeftArrow         |                                                                       `jsx`                                                                        |              `null`               | Replace the default arrow with your own                                                                                                                               |\n| customRightArrow        |                                                                       `jsx`                                                                        |              `null`               | Replace the default arrow with your own                                                                                                                               |\n| customDot               |                                                                       `jsx`                                                                        |               null                | Replace the default dots with your own                                                                                                                                |\n| customButtonGroup       |                                                                       `jsx`                                                                        |               null                | Fully customize your own control functionality if you don't want arrows or dots                                                                                       |\n| infinite                |                                                                     `boolean`                                                                      |               false               | Infinite loop                                                                                                                                                         |\n| minimumTouchDrag        |                                                                      `number`                                                                      |               `50`                | The amount of distance to drag / swipe in order to move to the next slide.                                                                                            |\n| afterChange             |                                                                     `function`                                                                     |              `null`               | A callback after sliding everytime.                                                                                                                                   |\n| beforeChange            |                                                                     `function`                                                                     |              `null`               | A callback before sliding everytime.                                                                                                                                  |\n| sliderClass             |                                                                      `string`                                                                      |  `'react-multi-carousel-track'`   | CSS class for inner slider div, use this to style your own track list.                                                                                                |\n| itemClass               |                                                                      `string`                                                                      |               `''`                | CSS class for carousel item, use this to style your own Carousel item. For example add padding-left and padding-right                                                 |\n| containerClass          |                                                                      `string`                                                                      |   `'react-multi-carousel-list'`   | Use this to style the whole container. For example add padding to allow the \"dots\" or \"arrows\" to go to other places without being overflown.                         |\n| dotListClass            |                                                                      `string`                                                                      | `'react-multi-carousel-dot-list'` | Use this to style the dot list.                                                                                                                                       |\n| keyBoardControl         |                                                                     `boolean`                                                                      |              `true`               | Use keyboard to navigate to next/previous slide                                                                                                                       |\n| autoPlay                |                                                                     `boolean`                                                                      |              `false`              | Auto play                                                                                                                                                             |\n| autoPlaySpeed           |                                                                      `number`                                                                      |               3000                | The unit is ms                                                                                                                                                        |\n| showDots                |                                                                     `boolean`                                                                      |              `false`              | Hide the default dot list                |\n| renderDotsOutside                |                                                                     `boolean`                                                                      |              `false`              | Show dots outside of the container                                                                                                                                     |\n| partialVisbile          |                                                                 `boolean | string`                                                                 |              `false`              | Show partial next slides. This is use with the `responsive` prop, see example for details                                                                             |\n| customTransition        |                                                                      `string`                                                                      |   `transform 300ms ease-in-out`   | Configure your own anaimation when sliding                                                                                                                            |\n| transitionDuration      | `number |`300` | The unit is ms, if you are using customTransition, make sure to put the duration here as this is needed for the resizing to work. |\n| focusOnSelect           |                                    `boolean |`false` | Go to slide on click and make the slide a current slide.                                    |\n| centerMode              |                                      `boolean |`false` | Shows the next items and previous items paritially.                                       |\n| additionalTransfrom     |                                              `number |`0` | additional transfrom to the current one.                                               |\n\n## Author\n\nüë§ **Yi Zhuang**\n\n- Github: [@YIZHUANG](https://github.com/YIZHUANG)\n\n## ü§ù Contribute\n\nPlease read https://github.com/YIZHUANG/react-multi-carousel/blob/master/contributing.md\n\nSubmit an issue for feature request or submit a pr.\n\n## Locale development.\n\n- cd app\n- npm install\n- npm run dev\n\n## Donation\n\nIf this project help you reduce time to develop, you can give me a cup of coffee :)\n\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=GJSPRG9RKSJLQ&source=url)\n\n## License\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FYIZHUANG%2Freact-multi-carousel.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2FYIZHUANG%2Freact-multi-carousel?ref=badge_large)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/YIZHUANG/react-multi-carousel.git"
  },
  "scripts": {
    "after-build": "cd src && copyfiles -f assets/* ../lib && npm run minify",
    "build": "rm -rf ./lib && tsc && npm run after-build",
    "build-storybook": "build-storybook",
    "export": "build-storybook -c .storybook -o .out",
    "lint": "tslint --fix \"src/**/*.ts\" \"src/**/*.tsx\" \"src/**/*.js\"",
    "lint-staged": "lint-staged",
    "minify": "node minify.js",
    "prettier": "prettier --write {examples,src,stories,test}/**/*.{js,ts,tsx}",
    "publish-ssr": "cd examples/ssr && now && now alias react-multi-carousel.now.sh",
    "storybook": "start-storybook -p 6006",
    "test": "jest",
    "test:watch": "jest --watch"
  },
  "types": "./lib/types.d.ts",
  "version": "2.2.2"
}
